<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JokerZheng of Blog</title>
  
  <subtitle>Life doesn&#39;t get easier, you just get stronger.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://swiftbman.github.io/"/>
  <updated>2019-09-29T06:13:46.587Z</updated>
  <id>https://swiftbman.github.io/</id>
  
  <author>
    <name>JokerZheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>FFmpeg 基础教程</title>
    <link href="https://swiftbman.github.io/2019/09/24/FFmpeg%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    <id>https://swiftbman.github.io/2019/09/24/FFmpeg基础教程/</id>
    <published>2019-09-24T02:28:12.000Z</published>
    <updated>2019-09-29T06:13:46.587Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>FFmpeg 基础教程</p></blockquote><a id="more"></a><h3 id="FFmpeg-基本信息查询命令"><a href="#FFmpeg-基本信息查询命令" class="headerlink" title="FFmpeg 基本信息查询命令"></a>FFmpeg 基本信息查询命令</h3><figure class="highlight plain"><figcaption><span>显示版本</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -version</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示可用的 demuxers</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -demuxers</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示可用的 muxers</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -muxers</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示可用的设备</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -devices</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示所有编解码器</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -codecs</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示可用的解码器</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -decoders</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示所有的编码器</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -encoders</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示比特流 filter</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -bsfs</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示可用的格式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -formats</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示可用的协议</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -protocols</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示可用的过滤器</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -filters</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示可用的像素格式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -pix_fmts</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示可用的采样格式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -sample_fmts</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示 channel 名称</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -layouts</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>显示识别的颜色名称</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFmpeg -colors</span><br></pre></td></tr></table></figure><h3 id="FFmpeg-录屏命令"><a href="#FFmpeg-录屏命令" class="headerlink" title="FFmpeg 录屏命令"></a>FFmpeg 录屏命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 录视频</span><br><span class="line">ffmpeg -f avfoundation -i 1 -r 30 out.yuv</span><br><span class="line"></span><br><span class="line"># 录声音</span><br><span class="line">ffmpeg -f avfoundation -i :1 out.wav</span><br><span class="line"></span><br><span class="line">-f: 指定使用 avfoundation 采集数据</span><br><span class="line">-i: 指定从哪儿采集数据，它是一个文件索引号</span><br><span class="line">-r: 指定帧率</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 播放</span><br><span class="line">ffplay -s 3360x2100 -pix_fmt uyvy422 out.yuv</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查询支持的设备</span><br><span class="line">ffmpeg -f avfoundation -list_devices true -i &quot;&quot;</span><br></pre></td></tr></table></figure><h3 id="多媒体格式转换"><a href="#多媒体格式转换" class="headerlink" title="多媒体格式转换"></a>多媒体格式转换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i out.mp4 -vcodec copy -acodec copy out.flv</span><br><span class="line"># 单独抽出视频流</span><br><span class="line">ffmpeg -i out.mp4 -an -vcodec copy out.h264</span><br></pre></td></tr></table></figure><h3 id="提取-YUV-原始视频数据"><a href="#提取-YUV-原始视频数据" class="headerlink" title="提取 YUV 原始视频数据"></a>提取 YUV 原始视频数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i MV.mp4  -an -c:v rawvideo -pix_fmt yuv420p out.yuv</span><br></pre></td></tr></table></figure><h3 id="提取-PCM-原始音频数据"><a href="#提取-PCM-原始音频数据" class="headerlink" title="提取 PCM 原始音频数据"></a>提取 PCM 原始音频数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i MV.mp4 -vn -ar 44100 -ac 2 -f s16le out.pcm</span><br><span class="line"></span><br><span class="line"># 播放提取的数据</span><br><span class="line">ffplay -ar 44100 -ac 2 -f s16le out.pcm</span><br></pre></td></tr></table></figure><h3 id="滤镜命令"><a href="#滤镜命令" class="headerlink" title="滤镜命令"></a>滤镜命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 宽和高减少200</span><br><span class="line">ffmpeg -i MV.mp4  -vf crop=in_w-200:in_h-200 -c:v libx264 -c:a copy out.mp4</span><br></pre></td></tr></table></figure><h3 id="音视频裁剪"><a href="#音视频裁剪" class="headerlink" title="音视频裁剪"></a>音视频裁剪</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i MV.mp4 -ss 00:00:00 -t 10 out.ts</span><br></pre></td></tr></table></figure><h3 id="音视频合并"><a href="#音视频合并" class="headerlink" title="音视频合并"></a>音视频合并</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -f concat -i input.txt out.mp4</span><br><span class="line"></span><br><span class="line">input.txt 文件内容为:</span><br><span class="line">file &apos;out1.mp4&apos;</span><br><span class="line">file &apos;out2.mp4&apos;</span><br></pre></td></tr></table></figure><h3 id="视频转图片"><a href="#视频转图片" class="headerlink" title="视频转图片"></a>视频转图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i out2.mp4 -r 1 -f image2 images-%3d.jpeg</span><br></pre></td></tr></table></figure><h3 id="图片转视频"><a href="#图片转视频" class="headerlink" title="图片转视频"></a>图片转视频</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i image-%3d.jpeg out.mp4</span><br></pre></td></tr></table></figure><h3 id="直播推-拉流"><a href="#直播推-拉流" class="headerlink" title="直播推/拉流"></a>直播推/拉流</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -i out.mp4 -c copy -f flv rtmp://server/live/streamName</span><br><span class="line"></span><br><span class="line">ffmpeg -i rtmp://server/live/streamName -c copy dump.flv</span><br></pre></td></tr></table></figure><hr><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="https://www.bilibili.com/video/av67371679/?p=7" target="_blank" rel="noopener">FFmpeg音视频核心技术精讲与实战</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;FFmpeg 基础教程&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="FFmpeg" scheme="https://swiftbman.github.io/categories/FFmpeg/"/>
    
    
      <category term="FFmpeg" scheme="https://swiftbman.github.io/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>数学符号</title>
    <link href="https://swiftbman.github.io/2019/05/16/math/"/>
    <id>https://swiftbman.github.io/2019/05/16/math/</id>
    <published>2019-05-16T08:43:39.000Z</published>
    <updated>2019-05-16T09:53:21.361Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>数学符号大全</p></blockquote><a id="more"></a><hr><h3 id="表1"><a href="#表1" class="headerlink" title="表1"></a>表1</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">例子</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">$ \in $</td><td style="text-align:center">$ x \in A $</td><td>$x$ 属于 $A$；$x$ 是集合 $A$ 的一个元素</td></tr><tr><td style="text-align:center">$ \notin $</td><td style="text-align:center">$ y \notin A$</td><td>$y$ 不属于 $A$；$y$ 不是集合 $A$ 的一个元素</td></tr><tr><td style="text-align:center">$ { ,\ \dots\ , } $</td><td style="text-align:center">$ {a,\ b,\ c,\ …, \ n} $</td><td>诸元素$a,\ b,\ c,\ \dots, \ n$构成的集合</td></tr><tr><td style="text-align:center">${\ \mid\ }$</td><td style="text-align:center">${ x \in a \mid p(x) } $</td><td>使命题 $p(x)$ 为真的 $A$ 中诸元素之集合</td></tr><tr><td style="text-align:center">$\emptyset$</td><td style="text-align:center">-</td><td>空集</td></tr><tr><td style="text-align:center">𝐍</td><td style="text-align:center">-</td><td>非负整数集；自然数集</td></tr><tr><td style="text-align:center">𝐍$^*$ 或 𝐍$_+$</td><td style="text-align:center">-</td><td>正整数集</td></tr><tr><td style="text-align:center">𝐐</td><td style="text-align:center">-</td><td>有理数集</td></tr><tr><td style="text-align:center">𝐑</td><td style="text-align:center">-</td><td>实数集</td></tr><tr><td style="text-align:center">$\subseteq$</td><td style="text-align:center">$ B \subseteq A $</td><td>$ B $ 含与 $ A $；$ B $ 是 $ A $ 的子集</td></tr><tr><td style="text-align:center">$\subsetneq$</td><td style="text-align:center">$ B \subsetneq A $</td><td>$ B $ 真包含于 $ A $；$ B $ 是 $ A $ 的真子集</td></tr><tr><td style="text-align:center">$ \cup $</td><td style="text-align:center">$A \cup B$</td><td>$ A $ 与 $ B $ 的并集</td></tr><tr><td style="text-align:center">$ \cap $</td><td style="text-align:center">$A \cap B$</td><td>$ A $ 与 $ B $ 的交集</td></tr><tr><td style="text-align:center">∁</td><td style="text-align:center">∁<sub>𝐴</sub><sup>𝐵</sup></td><td>𝐴 中子集𝐵的补集或余集</td></tr><tr><td style="text-align:center">$[\ , \ ]$</td><td style="text-align:center">$[a,\ b]$</td><td>𝐑 中由 $a$ 到 $b$ 的闭区间</td></tr><tr><td style="text-align:center">$(\ ,\ )$</td><td style="text-align:center">$(a,\ b)$</td><td>𝐑 中由 $a$ 到 $b$ 的开区间</td></tr><tr><td style="text-align:center">$[\ , \ )$</td><td style="text-align:center">$[𝑎,\ 𝑏)$</td><td>𝐑 中由 $a$（含于内) 到 $b$ 的右板卡区间</td></tr><tr><td style="text-align:center">$(\ ,\ ]$</td><td style="text-align:center">$(a,\ b]$</td><td>𝐑 中由 $a$ 到 $b$（含于内）的左半开区间</td></tr><tr><td style="text-align:center">$f(x)$</td><td style="text-align:center">-</td><td>函数 $ f $ 在 $ x $ 的值</td></tr><tr><td style="text-align:center">$f:A \to B$</td><td style="text-align:center">-</td><td>集合 $ A $ 到集合 $ B $ 的映射</td></tr></tbody></table></div><!-- more --><h3 id="表2"><a href="#表2" class="headerlink" title="表2"></a>表2</h3><div class="table-container"><table><thead><tr><th>符号</th><th style="text-align:center">例子</th><th>描述</th></tr></thead><tbody><tr><td>$ A \in a $</td><td style="text-align:center">-</td><td>点 $ A $ 在直线 $ a $ 上</td></tr><tr><td>$ A \notin a $</td><td style="text-align:center">-</td><td>点 $ A $ 不在直线 $ a $ 上</td></tr><tr><td>$ A \in \alpha $</td><td style="text-align:center">-</td><td>点 $ A $ 在平面 $ \alpha $ 内</td></tr><tr><td>$ A \notin \alpha $</td><td style="text-align:center">-</td><td>点 $ A $ 在平面 $ \alpha $ 外</td></tr><tr><td>$ \alpha \cap \beta = a $</td><td style="text-align:center">-</td><td>平面 $ \alpha $ 和平面 $ \beta $ 的交线是 $ a $</td></tr><tr><td>$ a \subset \alpha $</td><td style="text-align:center">-</td><td>直线 $ a $ 在平面 $ \alpha $ 内</td></tr><tr><td>$ a \not\subset \alpha $</td><td style="text-align:center">-</td><td>直线 $ a $ 不在平面 $ \alpha $ 内</td></tr><tr><td>$ a \cap b $</td><td style="text-align:center">-</td><td>直线 $ a $ 与直线 $ b $ 相交于点 $A$</td></tr><tr><td>$ a \cap \alpha = A $</td><td style="text-align:center">-</td><td>直线 $ a $ 与平面 $ \alpha $ 相交于点 $A$</td></tr><tr><td>$ a \parallel \alpha $</td><td style="text-align:center">-</td><td>直线 $ a $ 与平面 $ \alpha $ 互相平行</td></tr><tr><td>$ \alpha \parallel \beta $</td><td style="text-align:center">-</td><td>平面 $ \alpha $ 和平面 $ \beta $ 互相平行</td></tr><tr><td>$ a \perp \alpha $</td><td style="text-align:center">-</td><td>直线 $ a $ 与平面 $ \alpha $ 互相垂直</td></tr><tr><td>$ \alpha \perp \beta $</td><td style="text-align:center">-</td><td>平面 $ \alpha $ 与平面 $ \beta $ 互相垂直</td></tr><tr><td>$ \alpha-AB-\beta(\alpha-l-\beta)$</td><td style="text-align:center">-</td><td>棱为 $AB$，面为 $ \alpha $，$\beta$ 的二面角 （棱为 $l$，面为 $ \alpha $，$\beta$ 的二面角）</td></tr><tr><td><script type="math/tex">k_l,\ k_{AB}'</script></td><td style="text-align:center">-</td><td>直线 $l$ 的斜率 $k$, 直线 $AB$ 的斜率 $k’$</td></tr><tr><td>$AB$ 或 $ \mid AB \mid $</td><td style="text-align:center">-</td><td>线段 $AB$ 的长度</td></tr><tr><td>$ O-xyz $</td><td style="text-align:center">-</td><td>空间直角坐标系</td></tr></tbody></table></div><h3 id="表3"><a href="#表3" class="headerlink" title="表3"></a>表3</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">$ s $</td><td>标准差</td></tr><tr><td style="text-align:center">$ s^2 $</td><td>方差</td></tr><tr><td style="text-align:center">$ f_n(A) $</td><td>事件 $ A $ 出现的频率</td></tr><tr><td style="text-align:center">$ P(A) $</td><td>事件 $ A $ 的概率</td></tr></tbody></table></div><h3 id="表4"><a href="#表4" class="headerlink" title="表4"></a>表4</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">$\sin x$</td><td>$ x $ 的正弦</td></tr><tr><td style="text-align:center">$\cos x $</td><td>$ x $ 的余弦</td></tr><tr><td style="text-align:center">$\tan x $</td><td>$ x $ 的正切</td></tr><tr><td style="text-align:center">$\sin^2 x$</td><td>$\sin x $ 的平方</td></tr><tr><td style="text-align:center">𝒂</td><td>向量 𝒂</td></tr><tr><td style="text-align:center">$ \overrightarrow{AB} $</td><td>向量 $ \overrightarrow{AB} $</td></tr><tr><td style="text-align:center">$\mid$ 𝒂 $\mid$</td><td>向量 𝒂 的模（或长度）</td></tr><tr><td style="text-align:center">$\mid\ \overrightarrow{AB}\ \mid$</td><td>向量 $\overrightarrow{AB}$ 的模（或长度）</td></tr><tr><td style="text-align:center">𝟎</td><td>零向量</td></tr><tr><td style="text-align:center">𝒆</td><td>单位向量</td></tr><tr><td style="text-align:center">𝒊, 𝒋</td><td>平面直角坐标系中 $x$ 轴，$y$ 轴方向的单位向量</td></tr><tr><td style="text-align:center">𝒂 $\parallel$ 𝒃</td><td>向量 𝒂 与向量 𝒃 平行</td></tr><tr><td style="text-align:center">𝒂 $\perp$ 𝒃</td><td>向量 𝒂 与向量 𝒃 垂直</td></tr><tr><td style="text-align:center">𝒂 $+$ 𝒃</td><td>向量 𝒂 与向量 𝒃 的和</td></tr><tr><td style="text-align:center">𝒂 $-$ 𝒃</td><td>向量 𝒂 与向量 𝒃 的差</td></tr><tr><td style="text-align:center">$\lambda$𝒂</td><td>实数 $\lambda$ 与向量 𝒂 的积</td></tr><tr><td style="text-align:center">𝒂 ⋅ 𝒃</td><td>向量 𝒂 与向量 𝒃 的数量积</td></tr><tr><td style="text-align:center"><script type="math/tex">\{ 𝒂, 𝒃, 𝒄 \}</script></td><td>空间向量的一个基底</td></tr><tr><td style="text-align:center"><script type="math/tex">\{ 𝒊, 𝒋, 𝒌 \}</script></td><td>空间向量的单位正交基</td></tr></tbody></table></div><h3 id="表5"><a href="#表5" class="headerlink" title="表5"></a>表5</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">$ a_n $</td><td>数列 ${a_n} $ 的第 $n$ 项</td></tr><tr><td style="text-align:center">$ S_n $</td><td>数列前 $n$ 项的和</td></tr><tr><td style="text-align:center">$ d $</td><td>等差数列的公差</td></tr><tr><td style="text-align:center">$ q $</td><td>等比数列的公比</td></tr><tr><td style="text-align:center">$ &gt; $</td><td>大于</td></tr><tr><td style="text-align:center">$ &lt; $</td><td>小于</td></tr><tr><td style="text-align:center">$ \geq $</td><td>大于或等于</td></tr><tr><td style="text-align:center">$ \leq $</td><td>小于或等于</td></tr></tbody></table></div><h3 id="表6"><a href="#表6" class="headerlink" title="表6"></a>表6</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">$ p \land q $</td><td>$ p $ 且 $ q $</td></tr><tr><td style="text-align:center">$ p \lor q $</td><td>$ p $ 或 $ q $</td></tr><tr><td style="text-align:center">$ \neg\ p$</td><td>$p$ 的否定；非 $ p $</td></tr><tr><td style="text-align:center">$p\Rightarrow q$</td><td>若 $p$ 则 $q$</td></tr><tr><td style="text-align:center">$p\Leftrightarrow q$</td><td>$p\Rightarrow q$, 且 $q\Rightarrow p$；$p$ 等价于 $q$</td></tr><tr><td style="text-align:center">$ \forall\ x \in M,\ p(x)$</td><td>对于每一个属于 $M$ 的 $x$, $p(x)$ 成立</td></tr><tr><td style="text-align:center">$ \exists\ x_0 \in M,\ p(x_0)$</td><td>存在 $M$ 中的元 $x_0$, 使 $p(x)$ 成立</td></tr><tr><td style="text-align:center">$ x \to a $</td><td>$x$ 趋于 $a$</td></tr><tr><td style="text-align:center">$ \Delta x $</td><td>$x$ 的增量</td></tr><tr><td style="text-align:center">$ f’(a) $</td><td>函数 $f$ 的导（函）数在 $a$ 的值</td></tr><tr><td style="text-align:center">$ \frac{\mathrm d y}{\mathrm d x} $</td><td>函数 $ f $ 的导（函）数</td></tr><tr><td style="text-align:center">$ \int_a^b f(x)\mathrm{d}x $</td><td>函数 $ f $ 由 $ a $ 到 $ b $ 的定积分</td></tr></tbody></table></div><h3 id="表7"><a href="#表7" class="headerlink" title="表7"></a>表7</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">$ \displaystyle\sum^n_{i = 1}(y_i-\bar{y})^2$</td><td>总偏差平方和</td></tr><tr><td style="text-align:center">$\hat{𝒆}$</td><td>残差</td></tr><tr><td style="text-align:center">𝒆</td><td>模型误差</td></tr><tr><td style="text-align:center">$ \displaystyle\sum^n_{i = 1}(y_i-\hat{y}_i)^2$</td><td>残差平方和</td></tr><tr><td style="text-align:center">$ Q(\hat{a},\ \hat{b})$</td><td>残差平方和</td></tr><tr><td style="text-align:center">$ \displaystyle\sum^n_{i = 1}a_i$</td><td>$ a_1+a_2+\dotsb+a_n $</td></tr><tr><td style="text-align:center">$ \mathrm{i}$</td><td>虚数单位</td></tr><tr><td style="text-align:center">$ \mathbf{C} $</td><td>复数集</td></tr><tr><td style="text-align:center">$z,\ a+b\mathrm{i}$</td><td>复数 $z$, 实部为 $a$, 虚部为 $b$ 的复数</td></tr></tbody></table></div><h3 id="表8"><a href="#表8" class="headerlink" title="表8"></a>表8</h3><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">$ \mathbf{A}_n^m $</td><td>从 $ n $ 个不同的元素中取出 $m$ 个元素的排列数</td></tr><tr><td style="text-align:center">$ \mathbf{C}_n^m $</td><td>从 $ n $ 个不同的元素中取出 $m$ 个元素的组合数</td></tr><tr><td style="text-align:center">$ n!$</td><td>$ n $ 的阶乘</td></tr><tr><td style="text-align:center">$ \Omega $</td><td>基本事件的全体</td></tr><tr><td style="text-align:center">$ \bar A$</td><td>事件 $ A $ 的对立事件</td></tr><tr><td style="text-align:center">$ n(A) $</td><td>事件 $A$ 中基本事件的个数</td></tr><tr><td style="text-align:center">$ P(A) $</td><td>事件 $A$ 发生的概率</td></tr><tr><td style="text-align:center">$ P(B \mid A) $</td><td>在事件 $A$ 发生的条件下，事件 $B$ 发生的条件概率</td></tr><tr><td style="text-align:center">$ B(n,\ p)$</td><td>以 $ n $ 和 $ p $ 为参数的二项分布</td></tr><tr><td style="text-align:center">$ E(X) $</td><td>随机变量 $ X $ 的均值</td></tr><tr><td style="text-align:center">$ D(X) $</td><td>随机变量 $ X $ 的方差</td></tr><tr><td style="text-align:center">$ \sigma X$</td><td>随机变量 $ X $ 的标准差</td></tr><tr><td style="text-align:center">$ N(\mu,\ \sigma^2)$</td><td>均值为 $\mu$, 方差为 $\sigma^2$ 的正态分布</td></tr><tr><td style="text-align:center">$ (\bar x,\ \bar y) $</td><td>样本中心</td></tr></tbody></table></div><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href></a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;数学符号大全&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数学" scheme="https://swiftbman.github.io/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="数学符号" scheme="https://swiftbman.github.io/tags/%E6%95%B0%E5%AD%A6%E7%AC%A6%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>代码片段</title>
    <link href="https://swiftbman.github.io/2018/09/10/%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/"/>
    <id>https://swiftbman.github.io/2018/09/10/代码片段/</id>
    <published>2018-09-10T01:54:23.000Z</published>
    <updated>2019-05-16T06:58:29.709Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>收集实用的代码片段</p></blockquote><a id="more"></a><hr><h3 id="iOS金额字符串格式化显示的方法"><a href="#iOS金额字符串格式化显示的方法" class="headerlink" title="iOS金额字符串格式化显示的方法"></a>iOS金额字符串格式化显示的方法</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSString</span> *)moneyFormat:(<span class="built_in">NSString</span> *)money &#123;</span><br><span class="line">    <span class="keyword">if</span> (!money || money.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">BOOL</span> hasPoint = <span class="literal">NO</span>;</span><br><span class="line">    <span class="keyword">if</span> ([money rangeOfString:<span class="string">@"."</span>].length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        hasPoint = <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSMutableString</span> *pointMoney = [<span class="built_in">NSMutableString</span> stringWithString:money];</span><br><span class="line">    <span class="keyword">if</span> (hasPoint == <span class="literal">NO</span>) &#123;</span><br><span class="line">        [pointMoney appendString:<span class="string">@".00"</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSArray</span> *moneys = [pointMoney componentsSeparatedByString:<span class="string">@"."</span>];</span><br><span class="line">    <span class="keyword">if</span> (moneys.count &gt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> pointMoney;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (moneys.count == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@.00"</span>, moneys[<span class="number">0</span>]];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 整数部分每隔 3 位插入一个逗号</span></span><br><span class="line">        <span class="built_in">NSString</span> *frontMoney = [<span class="keyword">self</span> stringFormatToThreeBit:moneys[<span class="number">0</span>]];</span><br><span class="line">        <span class="keyword">if</span> ([frontMoney isEqualToString:<span class="string">@""</span>]) &#123;</span><br><span class="line">            frontMoney = <span class="string">@"0"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 拼接整数和小数两部分</span></span><br><span class="line">        <span class="built_in">NSString</span> *backMoney = moneys[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> ([backMoney length] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@.%@0"</span>, frontMoney, backMoney];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> ([backMoney length] &gt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@.%@"</span>, frontMoney, [backMoney substringToIndex:<span class="number">2</span>]];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@.%@"</span>, frontMoney, backMoney];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)stringFormatToThreeBit:(<span class="built_in">NSString</span> *)string &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *tempString = [string stringByReplacingOccurrencesOfString:<span class="string">@","</span> withString:<span class="string">@""</span>];</span><br><span class="line">    <span class="built_in">NSMutableString</span> *mutableString = [<span class="built_in">NSMutableString</span> stringWithString:tempString];</span><br><span class="line">    <span class="built_in">NSInteger</span> n = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSInteger</span> i = tempString.length - <span class="number">3</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        n++;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">3</span>) &#123;</span><br><span class="line">            [mutableString insertString:<span class="string">@","</span> atIndex:i];</span><br><span class="line">            n = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mutableString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSString</span> *)formatDecimalNumber:(<span class="built_in">NSString</span> *)string &#123;</span><br><span class="line">    <span class="keyword">if</span> (!string || string.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> string;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSNumber</span> *number = @([string doubleValue]);</span><br><span class="line">    <span class="built_in">NSNumberFormatter</span> *formatter = [[<span class="built_in">NSNumberFormatter</span> alloc] init];</span><br><span class="line">    formatter.numberStyle = kCFNumberFormatterDecimalStyle;</span><br><span class="line">    formatter.positiveFormat = <span class="string">@"###,##0.00"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *amountString = [formatter stringFromNumber:number];</span><br><span class="line">    <span class="keyword">return</span> amountString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="https://www.jianshu.com/p/95952b145a8e" target="_blank" rel="noopener">NSNumberFormatter介绍和用法</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;收集实用的代码片段&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://swiftbman.github.io/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="https://swiftbman.github.io/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>macOS软件推荐</title>
    <link href="https://swiftbman.github.io/2018/07/17/macOS%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    <id>https://swiftbman.github.io/2018/07/17/macOS软件推荐/</id>
    <published>2018-07-17T01:31:55.000Z</published>
    <updated>2019-05-16T07:03:51.427Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>macOS软件推荐</p></blockquote><a id="more"></a><hr><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><p><a href="http://xclient.info/s/navicat-premium.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Navicat Premium（强大的数据库管理工具）</a></p><p><a href="http://xclient.info/s/charles.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Charles（Mac上的抓包工具）</a></p><p><a href="http://xclient.info/s/xmind.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">XMind（最受欢迎思维导图软件）</a></p><p><a href="http://xclient.info/s/tower.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Tower（mac平台最强大的Git 客户端）</a><br><br><a href="http://xclient.info/s/yummy-ftp.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Yummy FTP</a>——快速安全的 FTP/SFTP/FTPS客户端</p><p><a href="http://xclient.info/s/paw.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Paw</a>——实用的HTTP/REST服务测试工具</p><p><a href="http://xclient.info/s/dash.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Dash（开发者必备API文档聚合）</a></p><p><a href="http://xclient.info/s/sip.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Sip Pro（屏幕取色工具）</a></p><p><a href="http://xclient.info/s/transmit.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Transmit（一款功能齐全的FTP客户端）</a></p><h3 id="Adobe"><a href="#Adobe" class="headerlink" title="Adobe"></a>Adobe<br></h3><hr><p><a href="http://xclient.info/s/adobe-photoshop-cc.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Photoshop CC</a><br><br><a href="http://xclient.info/s/adobe-dreamweaver-cc.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Dreamweaver CC</a><br><br><a href="http://xclient.info/s/experience-design.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Experience Design</a>——原型制作工具<br><br><a href="http://xclient.info/s/adobe-dimension.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Dimension CC</a>——3D制作软件<br><br><a href="http://xclient.info/s/adobe-animate-cc.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Animate CC</a>——Adobe全新动画制作工具<br><br><a href="http://xclient.info/s/adobe-after-effects-cc.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe After Effects CC</a><br><br><a href="http://xclient.info/s/adobe-lightroom-cc.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Photoshop Lightroom CC</a><br><br><a href="http://xclient.info/s/adobe-premiere-pro-cc.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Premiere Pro CC</a>——强大的视频编辑软件<br><br><a href="http://xclient.info/s/adobe-muse.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Muse CC</a><br><br><a href="http://xclient.info/s/adobe-audition.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Audition CC</a>——强大音频编辑工具<br><br><a href="http://xclient.info/s/adobe-indesign.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe InDesign CC</a>——专业的桌面出版与设计软件<br><br><a href="http://xclient.info/s/adobe-illustrator-cc.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Adobe Illustrator CC</a></p><hr><p><a href="http://xclient.info/s/mamp-pro.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">MAMP Pro</a>——集成web服务器环境</p><h3 id="JetBrains"><a href="#JetBrains" class="headerlink" title="JetBrains"></a>JetBrains<br></h3><hr><p><a href="http://xclient.info/s/clion.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">CLion</a>——JetBrains出品的强大的C/C++开发工具<br><br><a href="http://xclient.info/s/php-storm.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">PHPStorm</a>——最强PHP IDE开发工具<br><br><a href="http://xclient.info/s/web-storm.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">WebStorm</a><br><br><a href="http://xclient.info/s/rubymine.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">RubyMine</a>——号称最智能的Ruby和Rails的IDE<br><br><a href="http://xclient.info/s/appcode.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">AppCode</a>——Objective-C 的集成开发环境<br><br><a href="http://xclient.info/s/datagrip.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">DataGrip</a>——数据库管理工具<br><br><a href="http://xclient.info/s/intellij-idea.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">IntelliJ IDEA Ultimate Edition</a>——业界公认的最好的java开发工具之一<br><br><a href="https://www.jetbrains.com/go/?fromMenu" target="_blank" rel="noopener">GoLand</a><br><br><a href="https://www.jetbrains.com/rider/?fromMenu" target="_blank" rel="noopener">Rider</a><br><br><a href="http://xclient.info/s/pycharm.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">PyCharm</a>——强大的Python IDE工具</p><hr><p><a href="http://xclient.info/s/sublime-text.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Sublime Text</a><br><br><a href="http://xclient.info/s/ultraedit.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">UltraEdit</a>——老牌文本编辑器<br><br><a href="http://xclient.info/s/atom.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Atom</a>——专门为程序员推出的一个跨平台文本编辑器</p><p><a href="http://xclient.info/s/blocs.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Blocs</a>——优秀的零编码网页开发工具</p><p><a href="http://xclient.info/s/snippetslab.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">SnippetsLab</a>——构建你的私人代码片段库</p><p><a href="http://xclient.info/s/axure-rp.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Axure RP</a>——专业的快速原型设计工具</p><p><a href="http://xclient.info/s/reveal.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Reveal</a>——iOS开发调试神器</p><p><a href="http://xclient.info/s/cornerstone.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Cornerstone</a>——应该说是mac上最好用的SVN客户端</p><p><a href="http://xclient.info/s/mathworks-matlab.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">MATLAB</a>——强大的商业数学软件</p><p><a href="http://xclient.info/s/sketch.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Sketch</a>——轻量易用的矢量设计工具</p><p><a href="http://xclient.info/s/mind-node-pro.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">MindNode Pro</a>——思维导图工具</p><p><a href="http://xclient.info/s/alfred.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Alfred</a>——效率神器</p><p><a href="http://xclient.info/s/downie.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Downie</a>——视频下载工具</p><p><a href="http://xclient.info/s/boostnote.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Boostnote</a>——程序员的开源笔记</p><p><a href="http://xclient.info/s/principle.html?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Principle</a>——Mac平台交互动效设计神器</p><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="http://xclient.info/?t=b19ac9b363fc11a1488e4caf3a21c7754378d69c" target="_blank" rel="noopener">Xclient</a><br><a href="https://www.jetbrains.com" target="_blank" rel="noopener">JetBrains</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;macOS软件推荐&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS面试题搜集</title>
    <link href="https://swiftbman.github.io/2018/07/12/iOS%E9%9D%A2%E8%AF%95%E9%A2%98%E6%90%9C%E9%9B%86/"/>
    <id>https://swiftbman.github.io/2018/07/12/iOS面试题搜集/</id>
    <published>2018-07-12T01:09:34.000Z</published>
    <updated>2019-05-16T07:00:50.110Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>收集关于iOS的面试题</p></blockquote><a id="more"></a><hr><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5OTM0MzIwMQ==&amp;mid=2652562192&amp;idx=1&amp;sn=873b2ee71559b25294300b4ec6a71846&amp;chksm=bcd2a61e8ba52f0873815a4e68956657b4006204b18f4d066eee4e21d5a506247bf9fc1364c4&amp;mpshare=1&amp;scene=23&amp;srcid=0712RZWlTU2kZmv3YmciDQRv#rd" target="_blank" rel="noopener">2018收集iOS笔试题(仅供参考学习使用)</a></p><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href></a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;收集关于iOS的面试题&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://swiftbman.github.io/categories/iOS/"/>
    
    
      <category term="iOS面试题" scheme="https://swiftbman.github.io/tags/iOS%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>文章推荐</title>
    <link href="https://swiftbman.github.io/2018/07/10/%E6%96%87%E7%AB%A0%E6%8E%A8%E8%8D%90/"/>
    <id>https://swiftbman.github.io/2018/07/10/文章推荐/</id>
    <published>2018-07-10T09:28:28.000Z</published>
    <updated>2019-05-16T07:06:37.281Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>文章摘要：推荐技术文章</p></blockquote><a id="more"></a><hr><p><a href="https://juejin.im/post/5b23dafee51d4558e03cbf4f" target="_blank" rel="noopener">WWDC 2018：iOS 内存深入研究</a><br><br><a href="https://juejin.im/post/5b1f536a5188257d9b79dbcf" target="_blank" rel="noopener">WWDC 2018：细说 Swift 包管理工具 (Swift Package Manager)</a><br><br><a href="https://juejin.im/post/5b1e833ce51d450686186557" target="_blank" rel="noopener">WWDC 2018：理解崩溃以及崩溃日志</a><br><br><a href="http://mp.weixin.qq.com/s?__biz=MjM5OTM0MzIwMQ==&amp;mid=2652562218&amp;idx=2&amp;sn=8f7edf721c7fedf91e6f6e9ee3676c5a&amp;chksm=bcd2a6248ba52f322e5a40d0d66ce5b0e805de59c730b794beed3050cb2b6f16c9168ce1a3a6&amp;mpshare=1&amp;scene=23&amp;srcid=0713JAZB1ATRG5jSVAp4ylgM#rd" target="_blank" rel="noopener">iOS调试WebView,简单到无门槛</a><br></p><h2 id="iOS动画"><a href="#iOS动画" class="headerlink" title="iOS动画"></a>iOS动画</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzA5NzMwODI0MA==&amp;mid=2647760583&amp;idx=1&amp;sn=27a28f2c8bbc051f63391996fdac1a15&amp;chksm=8887e5f8bff06cee20511900960389f2967ac22d2e64aad503dbac0de021a281c1b2e757e93b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Core Animation 动画专题</a><br><br><a href="https://mp.weixin.qq.com/s?__biz=MzA5NzMwODI0MA==&amp;mid=2647760582&amp;idx=1&amp;sn=9b9d3717a39b144a47b103125aee3f16&amp;chksm=8887e5f9bff06cefffcb25f7481962f2311579707fab7b750c9eda16d59033993ead9bc66889&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">UIView 动画专题</a></p><h2 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzA5NzMwODI0MA==&amp;mid=2647760584&amp;idx=1&amp;sn=f06e634b5f6bc65b922d33bac24627aa&amp;chksm=8887e5f7bff06ce16cec13933f5a85e96e335e5393d7b390b9897c90232f0eebfd6b609ce956&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Flutter 混合工程改造实践</a></p><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="https://juejin.im/user/5a9a7c4ef265da239d48c115/posts" target="_blank" rel="noopener">知识小集</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;文章摘要：推荐技术文章&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="https://swiftbman.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术文章" scheme="https://swiftbman.github.io/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>iOS9新特性之常见关键字</title>
    <link href="https://swiftbman.github.io/2017/09/15/iOS9%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8B%E5%B8%B8%E8%A7%81%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>https://swiftbman.github.io/2017/09/15/iOS9新特性之常见关键字/</id>
    <published>2017-09-15T01:59:55.000Z</published>
    <updated>2019-05-16T07:06:12.770Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>文章摘要：介绍iOS9常见关键字的作用</p></blockquote><a id="more"></a><hr><ul><li>iOS9新出的关键字是用来修饰属性、方法的参数和返回值</li><li>目的是迎合Swift，提高开发人员的代码规范，减少程序员之间的交流</li><li>iOS新出的关键字有<em> nonnull、 nullable、 null_resettable、 _Null_unspecified </em>，只能修饰对象，不能修饰基本数据类型<figure class="highlight objc"><figcaption><span>nullable表示可为空</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// nullable书写规范:</span></span><br><span class="line"><span class="comment">// 方式一:</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">NSString</span> *name;</span><br><span class="line"><span class="comment">// 方式二:</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *_Nullable name;</span><br><span class="line"><span class="comment">// 方式三:</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *__<span class="keyword">nullable</span> name;</span><br></pre></td></tr></table></figure><figure class="highlight objc"><figcaption><span>nonnull表示不能为空</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// nonnull书写规范:</span></span><br><span class="line"><span class="comment">// 方式一:</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nonnull</span>) <span class="built_in">NSString</span> *name;</span><br><span class="line"><span class="comment">// 方式二:</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *_Nonnull name;</span><br><span class="line"><span class="comment">// 方式三:</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *__<span class="keyword">nonnull</span> name;</span><br></pre></td></tr></table></figure><div class="note warning"><h4 id="在NS-ASSUME-NONNULL-BEGIN和NS-ASSUME-NONNULL-END之间-定义的所有对象属性和方法默认都是nonnull"><a href="#在NS-ASSUME-NONNULL-BEGIN和NS-ASSUME-NONNULL-END之间-定义的所有对象属性和方法默认都是nonnull" class="headerlink" title="在NS_ASSUME_NONNULL_BEGIN和NS_ASSUME_NONNULL_END之间,定义的所有对象属性和方法默认都是nonnull"></a>在<code>NS_ASSUME_NONNULL_BEGIN</code>和<code>NS_ASSUME_NONNULL_END</code>之间,定义的所有对象属性和方法默认都是nonnull</h4></div><figure class="highlight objc"><figcaption><span>null_resettable作用: get不能返回为空, set可以为空</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 书写方式:</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">null_resettable</span>) <span class="built_in">NSString</span> *name;</span><br></pre></td></tr></table></figure><div class="note warning"><h4 id="如果使用null-resettable-必须重写get方法或者set方法-处理传递的值为空的情况"><a href="#如果使用null-resettable-必须重写get方法或者set方法-处理传递的值为空的情况" class="headerlink" title="如果使用null_resettable,必须重写get方法或者set方法,处理传递的值为空的情况"></a>如果使用null_resettable,必须重写get方法或者set方法,处理传递的值为空的情况</h4></div><figure class="highlight objc"><figcaption><span>_Null_unspecified:不确定是否为空</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 书写方式只有这种</span></span><br><span class="line"><span class="comment">// 方式一</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *_Null_unspecified name;</span><br><span class="line"><span class="comment">// 方式二</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *__<span class="keyword">null_unspecified</span> name;</span><br></pre></td></tr></table></figure><figure class="highlight objc"><figcaption><span>以下这种写法结果是可以为空</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NS_ASSUME_NONNULL_BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">NSString</span> *name;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_END</span></span><br></pre></td></tr></table></figure></li></ul><hr><div class="note info"><h4 id="相关链接：无"><a href="#相关链接：无" class="headerlink" title="相关链接：无"></a>相关链接：无</h4><p><a href></a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;文章摘要：介绍iOS9常见关键字的作用&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://swiftbman.github.io/categories/iOS/"/>
    
    
      <category term="iOS9新特性" scheme="https://swiftbman.github.io/tags/iOS9%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative开发环境的搭建</title>
    <link href="https://swiftbman.github.io/2017/07/28/ReactNative%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>https://swiftbman.github.io/2017/07/28/ReactNative开发环境的搭建/</id>
    <published>2017-07-28T06:11:40.000Z</published>
    <updated>2019-05-16T07:05:41.840Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>文章摘要：配置ReactNative开发环境</p></blockquote><a id="more"></a><hr><h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><ul><li>安装Homebrew<br>Homebrew是OS X的套件(包)管理器，我们可以通过它获取并且安装很多组件<br>更新Homebrew（解决无法更新的最土办法，卸了重新安装）<br>ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/uninstall" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/install/master/uninstall</a>)”<br>ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”<br>安装方式:<br>ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”</li><li><p>安装npm和Node.js<br>Node.js最好安装4.0及其以上更高版本，node安装成功后npm自动也就有了，直接下载安装Node.js，网址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install node</span><br></pre></td></tr></table></figure></li><li><p>定期软件更新保证最新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew update &amp;&amp; brew upgrade</span><br></pre></td></tr></table></figure></li></ul><h2 id="其它相关安装"><a href="#其它相关安装" class="headerlink" title="其它相关安装"></a>其它相关安装</h2><ul><li><p>watchman<br>该插件用于监控bug文件和文件变化 ，并且可以触发指定的操作<br>watchman安装异常可能会导致一些问题，比如初始化卡住</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install watchman</span><br></pre></td></tr></table></figure></li><li><p>flow<br>flow是一个 JavaScript 的静态类型检查器，建议安装它，以方便找出代码中可能存在的类型错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install flow</span><br></pre></td></tr></table></figure></li></ul><h2 id="ReactNative安装"><a href="#ReactNative安装" class="headerlink" title="ReactNative安装"></a>ReactNative安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g react-native-cli</span><br></pre></td></tr></table></figure><h2 id="安装yarn"><a href="#安装yarn" class="headerlink" title="安装yarn"></a>安装yarn</h2><p>yarn是Facebook提供的替代npm的工具，可以加速node模块的下载。React Native的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g yarn</span><br></pre></td></tr></table></figure><p></p><p>也可以两个一起安装<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g yarn react-native-cli</span><br></pre></td></tr></table></figure><p></p><h2 id="iOS开发环境需求"><a href="#iOS开发环境需求" class="headerlink" title="iOS开发环境需求"></a>iOS开发环境需求</h2><p>Xcode</p><h2 id="Android开发环境需求"><a href="#Android开发环境需求" class="headerlink" title="Android开发环境需求"></a>Android开发环境需求</h2><p>JDK: <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a><br>Android studio: <a href="http://www.android-studio.org" target="_blank" rel="noopener">http://www.android-studio.org</a></p><h2 id="安装Genymotion"><a href="#安装Genymotion" class="headerlink" title="安装Genymotion"></a>安装Genymotion</h2><p>Genymotion是一个第三方模拟器，它比Google官方的模拟器更易设置且性能更好。但是，它只针对个人用户免费。<br>下载地址：<a href="https://www.genymotion.com/" target="_blank" rel="noopener">https://www.genymotion.com/</a><br>打开Genymotion,如果你尚未安装VirtualBox,它有可能会提示你安装<br>创建一个模拟器并启动<br>按下⌘+M可以打开开发者菜单(在安装并启动了React Native应用之后)</p><h2 id="初始化第一个ReactNative应用"><a href="#初始化第一个ReactNative应用" class="headerlink" title="初始化第一个ReactNative应用"></a>初始化第一个ReactNative应用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native init 项目名称</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ react-native init MyApp --version 0.44.3 #指定版本初始化</span><br></pre></td></tr></table></figure><p>初始化成功如下图<br><img src="./初始化成功.png" alt="初始化成功"><br></p><div class="note warning"><p>注意:由于众所周知的网络原因，需要等待一段时间（具体视网络情况而定）。react-native命令行从npm官方源拖代码时会遇上麻烦，可以将npm仓库源替换为国内镜像：<br>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a><br>npm config set disturl <a href="https://npm.taobao.org/dist" target="_blank" rel="noopener">https://npm.taobao.org/dist</a></p></div><p></p><h2 id="目录结构分析"><a href="#目录结构分析" class="headerlink" title="目录结构分析"></a>目录结构分析</h2><p>a）默认生成android和ios两个平台的原生项目；<br>b）其中，index.android.js和index.ios.js文件为Android和iOS的空壳应用文件；<br>c）此外，node_modules文件夹，是为Node.js存放和管理npm包资源，也包含React Native框架文件。<br><img src="./目录结构.png" alt="目录结构"></p><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><p>用Xcode打开ios目录下面的工程项目，并运行，运行结果如下图<br><img src="./iOS运行成功.png" alt="ios"><br>用Android Studio打开android文件夹下的app并运行，运行结果如下图<br><img src="./Android运行成功.png" alt="Android"></p><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>⌘+D 调出iOS调试菜单<br>⌘+M 调出Android调试菜单<br></p><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="https://mp.weixin.qq.com/s?__biz=MzIxNjEzNjUzOQ==&amp;mid=402020148&amp;idx=2&amp;sn=ccad14a9197c8dbc4700c40bb907e56c&amp;chksm=058f590032f8d016e39a92b81735ab1e263ac2f4279d31fffcdee1da28ddb6f6359a2ec9da6c&amp;mpshare=1&amp;scene=23&amp;srcid=0709jXriKzXNcWme3YszoeJ3#rd" target="_blank" rel="noopener">配置React Native的开发环境</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;文章摘要：配置ReactNative开发环境&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="ReactNative" scheme="https://swiftbman.github.io/categories/ReactNative/"/>
    
    
      <category term="ReactNative" scheme="https://swiftbman.github.io/tags/ReactNative/"/>
    
      <category term="开发环境配置" scheme="https://swiftbman.github.io/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>UNIX命令详解之目录及文件操作命令</title>
    <link href="https://swiftbman.github.io/2017/07/27/UNIX%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3%E4%B9%8B%E7%9B%AE%E5%BD%95%E5%8F%8A%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://swiftbman.github.io/2017/07/27/UNIX命令详解之目录及文件操作命令/</id>
    <published>2017-07-27T07:58:05.000Z</published>
    <updated>2019-05-16T07:05:06.363Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>文章摘要：详解UNIX命令之目录及文件操作命令</p></blockquote><a id="more"></a><hr><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><p>用法：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls [-ABCFGHLOPRSTUWabcdefghiklmnopqrstuwx1] [file ...]</span><br></pre></td></tr></table></figure><p></p><p>参数含义：<br>-A: 显示除 “.”和“..”外的所有文件<br>-B: 不输出以 “~”结尾的备份文件。<br>-C: 按列输出，纵向排序。<br>-F: 如果是文件夹，名字后面会加个/, 比如：folder/<br>-G: 输出文件的组的信息。<br>-H: 不懂这个干嘛用的，欢迎指出。<br>-L: 列出链接文件名而不是链接到的文件。<br>-O: 不懂这个干嘛用的，欢迎指出。<br>-P: 不懂这个干嘛用的，欢迎指出。<br>-R: 列出所有子目录下的文件。<br>-S: 以文件大小排序。<br>-T: 不懂这个干嘛用的，欢迎指出。<br>-U: 不懂这个干嘛用的，欢迎指出。<br>-W: 不懂这个干嘛用的，欢迎指出。<br>-a: 列出目录下的所有文件，包括以 . 开头的隐含文件。<br>-b: 把文件名中不可输出的字符用反斜杠加字符编号(就象在C语言里一样)的形式列出。<br>-c: 输出文件的 i 节点的修改时间，并以此排序。<br>-d: 将目录像文件一样显示，而不是显示其下的文件。<br>-e: 输出时间的全部信息，而不是输出简略信息。<br>-f: 此参数的效果和同时指定“aU”参数相同，并关闭“lst”参数的效果；<br>-g: 无用。<br>-h: 不懂这个干嘛用的，欢迎指出。<br>-i: 输出文件的 i 节点的索引信息。<br>-k: 以 k 字节的形式表示文件的大小。<br>-l: 列出文件的详细信息。<br>-m: 横向输出文件名，并以“，”作分格符。<br>-n: 用数字的 UID,GID 代替名称。<br>-o: 显示文件的除组信息外的详细信息。<br>-p: 不懂这个干嘛用的，欢迎指出。<br>-q: 用?代替不可输出的字符。<br>-r: 对目录反向排序。<br>-s: 在每个文件名后输出该文件的大小。<br>-t: 以时间排序。<br>-u: 以文件上次被访问的时间排序。<br>-w: 不懂这个干嘛用的，欢迎指出。<br>-x: 按列输出，横向排序。<br>-1: 一行只输出一个文件。</p><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pwd # 本命令用于显示当前的工作目录</span><br></pre></td></tr></table></figure><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd 回到注册进入时的目录 </span><br><span class="line">$ cd /tmp 进入 /tmp 目录 </span><br><span class="line">$ cd ../ 进入上级目录</span><br></pre></td></tr></table></figure><h2 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir [-pv] [-m mode] directory ...</span><br><span class="line"></span><br><span class="line">mkdir tmp 在当前目录下建立子目录 tmp </span><br><span class="line">mkdir -m 777 /tmp/abc 用所有用户可读可写可执行的存取模式 </span><br><span class="line">建立目录 /tmp/aaa ，存取模式参看命令 chmod </span><br><span class="line">mkdir -p /tmp/a/b/c 建立目录 /tmp/a/b/c ，若不存在目录 /tmp/a </span><br><span class="line">及/tmp/a/b 则建立之</span><br></pre></td></tr></table></figure><p></p><h2 id="rmdir"><a href="#rmdir" class="headerlink" title="rmdir"></a>rmdir</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ rmdir [-p] directory ...</span><br><span class="line"></span><br><span class="line">rmdir /tmp/abc 删除目录 /tmp/abc </span><br><span class="line">rmdir -p /tmp/a/b/c 删除目录 /tmp/a/b/c ，若目录 /tmp/a /b </span><br><span class="line">及/tmp/a 空，则删除</span><br></pre></td></tr></table></figure><p></p><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat [-benstuv] [file ...]</span><br></pre></td></tr></table></figure><p></p><p>参数说明:<br>-b 显示行号，不包括空行<br>-e 在使用-v 选项时，在每一行的行尾显示 ＄<br>-n 显示行号，包括空行<br>-s 对不存在的文件不作提示<br>-t 在使用-v 选项时，将制表符（tab） 显示成 ^I，将换页符<br>（formfeed）显示成 ^ L<br>-u 无缓冲的输出(缺省为有缓冲输出)<br>-v 显示出文件中的非打印字符，控制字符显示成^n ，n为八进制数字，<br>其他非打印字符显示成M-x ， x 为该字符低7位的8进制数值</p><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ head [-n lines | -c bytes] [file ...]</span><br></pre></td></tr></table></figure><p></p><p>参数说明:<br>-n lines: 控制几行输出，默认10行<br>-c bytes: 控制字节输出</p><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file target_file</span><br><span class="line">$ cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file ... target_directory</span><br></pre></td></tr></table></figure><p></p><h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mv [-f | -i | -n] [-v] source target</span><br><span class="line">$ mv [-f | -i | -n] [-v] source ... directory</span><br></pre></td></tr></table></figure><p></p><p>参数说明:<br>-i: 在覆盖已存在文件时作提示，若回答 y 则覆盖，其他则中止<br>-f: 覆盖前不作任何提示</p><h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rm [-f | -i] [-dPRrvW] file ...</span><br><span class="line">       unlink file</span><br></pre></td></tr></table></figure><p></p><p>说明: 用来删除文件或目录<br>参数说明:<br>-f: 删除文件时不作提示<br>-r: 递归地删除目录及其所有子目录<br>-i: 删除文件之前先作提示</p><h2 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod [-fhv] [-R [-H | -L | -P]] [-a | +a | =a  [i][# [ n]]] mode|entry file ...</span><br><span class="line">$ chmod [-fhv] [-R [-H | -L | -P]] [-E | -C | -N | -i | -I] file ...</span><br></pre></td></tr></table></figure><p></p><p>说明: 改变文件的存取模式，存取模式可表示为数字或符号串</p><h2 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chown [-fhv] [-R [-H | -L | -P]] owner[:group] file ...</span><br><span class="line">$ chown [-fhv] [-R [-H | -L | -P]] :group file ...</span><br></pre></td></tr></table></figure><p></p><p>说明:<br>文件的UID表示文件的文件主，文件主可用数字表示， 也可用一个有效的用户名表示，此命令改变一个文件的UID，仅当此文件的文件主或超级用户可使用。<br>参数说明:<br>-R: 递归地改变所有子目录下所有文件的存取模式</p><h2 id="chgrp"><a href="#chgrp" class="headerlink" title="chgrp"></a>chgrp</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chgrp [-fhv] [-R [-H | -L | -P]] group file ...</span><br></pre></td></tr></table></figure><p></p><p>说明:<br>文件的GID表示文件的文件组，文件组可用数字表示， 也可用一个有效的组名表示，此命令改变一个文件的GID，可参看chown。</p><h2 id="cmp"><a href="#cmp" class="headerlink" title="cmp"></a>cmp</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cmp [OPTION]... FILE1 [FILE2 [SKIP1 [SKIP2]]]</span><br></pre></td></tr></table></figure><p></p><p>说明:<br>比较两个文件，若文件1 为 “-“ ，则使用标准输入， 两个文件相同则无提示，不同则显示出现第一个不同时的字符数和行号。</p><h2 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ diff [OPTION]... FILES</span><br></pre></td></tr></table></figure><p></p><p>说明:<br>本命令比较两个文本文件，将不同的行列出来</p><h2 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wc [-clmw] [file ...]</span><br></pre></td></tr></table></figure><p></p><p>说明:<br>统计文件的行、字、字符数，若无指定文件，则统计标准输入<br>参数说明:<br>-c: 只统计字符数<br>-w: 只统计字数<br>-l: 只统计行数<br>-m: 只统计字符数</p><h2 id="split"><a href="#split" class="headerlink" title="split"></a>split</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ split [-a sufflen] [-b byte_count] [-l line_count] [-p pattern]</span><br><span class="line">             [file [prefix]]</span><br></pre></td></tr></table></figure><p></p><p>说明:<br>split 将指定大文件分解为若干个小文件，每个文件长度为n行(n 缺省时为1000)，第一个小文件名为指定的名字后跟aa，直至zz，名字缺省值为x，若未指定大文件名，则使用标准输入</p><h2 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...</span><br></pre></td></tr></table></figure><p></p><p>说明: 将指定文件的访问时间和修改时间改变，若指定文件不存在则创建之，若无指定时间，则使用当前时间，返回值是未成功改变时间的文件个数，包括不存在而又未能创建的文件。<br>参数说明:<br>-a 只改变访问时间<br>-m 只改变修改时间<br>-c 若文件不存在，不创建它且不作提示<br>mmddhhmm[yy] 两位表示 月日时分[年]</p><h2 id="file"><a href="#file" class="headerlink" title="file"></a>file</h2><p>用法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file [OPTION...] [FILE...]</span><br></pre></td></tr></table></figure><p></p><p>说明:<br>file 对指定文件进行测试，尽量猜测出文件类型并显示出来<br>-f 文件名文件 文件名文件是一个包含了文件名的文本文件， -f 选项测试<br>文件名文件中所列出的文件</p><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ find [-H | -L | -P] [-EXdsx] [-f path] path ... [expression]</span><br><span class="line">$ find [-H | -L | -P] [-EXdsx] -f path [path ...] [expression]</span><br></pre></td></tr></table></figure><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ grep [-abcDEFGHhIiJLlmnOoqRSsUVvwxZ] [-A num] [-B num] [-C[num]]</span><br><span class="line">    [-e pattern] [-f file] [--binary-files=value] [--color=when]</span><br><span class="line">    [--context[=num]] [--directories=action] [--label] [--line-buffered]</span><br><span class="line">    [--null] [pattern] [file ...]</span><br></pre></td></tr></table></figure><h2 id="vi"><a href="#vi" class="headerlink" title="vi"></a>vi</h2><p>说明:<br>vi 是一个基于行编辑器 ex 上的全屏幕编辑器</p><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="http://blog.chinaunix.net/uid-20489505-id-70154.html" target="_blank" rel="noopener">UNIX经典命令详解</a><br><a href="http://man.linuxde.net" target="_blank" rel="noopener">Linux命令大全</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;文章摘要：详解UNIX命令之目录及文件操作命令&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="UNIX" scheme="https://swiftbman.github.io/categories/UNIX/"/>
    
    
      <category term="UNIX命令" scheme="https://swiftbman.github.io/tags/UNIX%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>关于git的使用</title>
    <link href="https://swiftbman.github.io/2017/07/26/%E5%85%B3%E4%BA%8Egit%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://swiftbman.github.io/2017/07/26/关于git的使用/</id>
    <published>2017-07-26T02:07:49.000Z</published>
    <updated>2019-05-16T07:04:33.863Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>文章摘要：git常用命令的使用</p></blockquote><a id="more"></a><hr><ol><li>什么是Git？<br>Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。<br>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<br>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</li><li>Git 与 SVN 区别？<br>GIT不仅仅是个版本控制系统，它也是个内容管理系统(CMS),工作管理系统等。<br>如果你是一个具有使用SVN背景的人，你需要做一定的思想转换，来适应GIT提供的一些概念和特征。<br>Git 与 SVN 区别点：<br>(1) GIT是分布式的，SVN不是：这是GIT和其它非分布式的版本控制系统，例如SVN，CVS等，最核心的区别。<br>(2) GIT把内容按元数据方式存储，而SVN是按文件：所有的资源控制系统都是把文件的元信息隐藏在一个类似.svn,.cvs等的文件夹里。<br>(3) GIT分支和SVN的分支不同：分支在SVN中一点不特别，就是版本库中的另外的一个目录。<br>(4) GIT没有一个全局的版本号，而SVN有：目前为止这是跟SVN相比GIT缺少的最大的一个特征。<br>(5) GIT的内容完整性要优于SVN：GIT的内容存储使用的是SHA-1哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。</li><li><p>Git安装配置<br>Git 各平台安装包下载地址为：<a href="http://git-scm.com/downloads" target="_blank" rel="noopener">http://git-scm.com/downloads</a><br>Mac系统下载后安装即可。<br>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install git</span><br></pre></td></tr></table></figure></li><li><p>Git工作流程<br>一般工作流程如下：<br>(1) 克隆 Git 资源作为工作目录。<br>(2) 在克隆的资源上添加或修改文件。<br>(3) 如果其他人修改了，你可以更新资源。<br>(4) 在提交前查看修改。<br>(5) 提交修改。<br>(6) 在修改完成后，如果发现错误，可以撤回提交并再次修改并提交。</p></li><li><p>同步到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ceshi                   # 创建ceshi文件夹</span><br><span class="line">$ cd ceshi                      # 转到ceshi目录</span><br><span class="line">$ git init                      # 初始化git</span><br><span class="line">$ echo &quot;# ceshi&quot; &gt;&gt; README.md   # 写入# ceshi到 README.md</span><br><span class="line">$ git add README.md             # 添加</span><br><span class="line">$ git commit -m &quot;first commit&quot;  # 提交</span><br><span class="line">$ git remote add origin https://git.coding.net/SwiftMan/ceshi.git # 添加远程仓库地址</span><br><span class="line">$ git push -u origin master # 同步到远程仓库</span><br></pre></td></tr></table></figure></li><li><p>git的详细使用</p></li></ol><ul><li><p>Git 为你的每一个提交都记录你的名字与电子邮箱地址，所以第一步需要配置用户名和邮箱地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &apos;runoob&apos; </span><br><span class="line">$ git config --global user.email test@runoob.com</span><br></pre></td></tr></table></figure></li><li><p>创建仓库<br>Git 使用 git init 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 git init 是使用 Git 的第一个命令。<br>在执行完成 git init 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变（不像 SVN 会在每个子目录生成 .svn 目录，Git 只在仓库的根目录生成 .git 目录）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init   # 该命令执行完后会在当前目录生成一个 .git 目录</span><br><span class="line">$ git init newrepo # 使用我们指定目录作为Git仓库</span><br></pre></td></tr></table></figure></li><li><p>以下命令将目录下以 .c 结尾及 README 文件提交到仓库中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add *.c</span><br><span class="line">$ git add README</span><br><span class="line">$ git commit -m &quot;初始化项目版本&quot;</span><br></pre></td></tr></table></figure></li><li><p>我们使用 git clone 从现有 Git 仓库中拷贝项目（类似 svn checkout）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git clone &lt;repo&gt;</span><br><span class="line">$ git clone &lt;repo&gt; &lt;directory&gt;</span><br><span class="line">参数说明：</span><br><span class="line">repo:Git 仓库。</span><br><span class="line">directory:本地目录。</span><br><span class="line">例如要克隆 Ruby 语言的 Git 代码仓库 Grit，可以用下面的命令：</span><br><span class="line">$ git clone git://github.com/schacon/grit.git</span><br><span class="line">执行该命令后，会在当前目录下创建一个名为grit的目录，其中包含一个 .git 的目录，用于保存下载下来的所有版本记录。</span><br><span class="line">如果要自己定义要新建的项目目录名称，可以在上面的命令末尾指定新的名字：</span><br><span class="line">$ git clone git://github.com/schacon/grit.git mygrit</span><br><span class="line">$ git status -s # 命令用于查看项目的当前状态, -s 参数，以获得简短的结果输出</span><br></pre></td></tr></table></figure></li><li><p>git diff</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git diff # 尚未缓存的改动</span><br><span class="line">$ git diff --cached # 查看已缓存的改动</span><br><span class="line">$ git diff HEAD # 查看已缓存的与未缓存的所有改动</span><br><span class="line">$ git diff --stat # 显示摘要而非整个 diff</span><br></pre></td></tr></table></figure></li><li><p>git commit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m ‘ddd‘ #  将缓存区内容添加到仓库中</span><br><span class="line">如果你觉得 git add 提交缓存的流程太过繁琐，Git 也允许你用 -a 选项跳过这一步</span><br><span class="line">$ git commit -am &apos;修改 hello.php 文件&apos;</span><br></pre></td></tr></table></figure></li><li><p>$ git reset HEAD — hello.php # 取消hello.php的缓存</p></li><li>git rm<br>git rm 会将条目从缓存区中移除。这与 git reset HEAD 将条目取消缓存是有区别的。 “取消缓存”的意思就是将缓存区恢复为我们做出修改之前的样子。<br>默认情况下，git rm -f file 会将文件从缓存区和你的硬盘中（工作目录）删除。<br>如果你要在工作目录中留着该文件，可以使用 git rm —cached：</li><li>git mv<br>git mv 命令做得所有事情就是 git rm —cached 命令的操作， 重命名磁盘上的文件，然后再执行 git add 把新文件添加到缓存区。</li><li><p>git remote</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote # 要查看当前配置有哪些远程仓库</span><br><span class="line">$ git remote -v # 执行时加上 -v 参数，你还可以看到每个别名的实际链接地址</span><br></pre></td></tr></table></figure></li><li><p>提取远程仓库<br>Git 有两个命令用来提取远程仓库的更新。<br>1、从远程仓库下载新分支与数据：<br>git fetch<br>该命令执行完后需要执行git merge 远程分支到你所在的分支。<br>2、从远端仓库提取数据并尝试合并到当前分支：<br>git pull<br>该命令就是在执行 git fetch 之后紧接着执行 git merge 远程分支到你所在的任意分支。<br>假设你配置好了一个远程仓库，并且你想要提取更新的数据，你可以首先执行 git fetch [alias] 告诉 Git 去获取它有你没有的数据，然后你可以执行 git merge [alias]/[branch] 以将服务器上的任何更新（假设有人这时候推送到服务器了）合并到你的当前分支。<br>推送你的新分支与数据到某个远端仓库命令<br>$ git push [alias] [branch]<br>以上命令将你的 [branch] 分支推送成为 [alias] 远程仓库上的 [branch] 分支，实例如下。</p></li><li>删除远程仓库<br>删除远程仓库你可以使用命令：<br>git remote rm [别名]</li><li>建立分支<br>要先commit一次才会真正建立master分支<br>创建分支命令：<br>$ git branch (branchname)<br>切换分支命令:<br>$ git checkout (branchname)<br>当你切换分支的时候，Git 会用该分支的最后提交的快照替换你的工作目录的内容， 所以多个分支不需要多个目录。<br>合并分支命令:<br>$ git merge<br>没有参数时，git branch 会列出你在本地的分支<br>$ git branch<br>我们也可以使用 git checkout -b (branchname) 命令来创建新分支并立即切换到该分支下，从而在该分支中操作。</li><li>删除分支<br>$ git branch -d/-D(没有第一次合并过分支的时候用-D) (branchname)</li><li><p>查看提交历史</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git log # 查看提交历史</span><br><span class="line">$ git log --oneline # 查看历史记录的简洁版本</span><br><span class="line">$ git log --oneline --graph # 查看历史中什么时候出现了分支、合并</span><br><span class="line">$ git log --reverse --oneline # &apos;--reverse&apos;参数来逆向显示所有日志</span><br><span class="line"></span><br><span class="line">如果只想查找指定用户的提交日志可以使用命令：git log --author , 例如，比方说我们要找 Git 源码中 Linus 提交的部分：</span><br><span class="line">$ git log --author=Linus --oneline -5</span><br><span class="line"></span><br><span class="line">如果你要指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after。 </span><br><span class="line">例如，如果我要看 Git 项目中三周前且在四月十八日之后的所有提交，我可以执行这个（我还用了 --no-merges 选项以隐藏合并提交）：</span><br><span class="line">$ git log --oneline --before=&#123;3.weeks.ago&#125; --after=&#123;2010-04-18&#125; --no-merges</span><br></pre></td></tr></table></figure></li><li><p>Git 标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a v1.0  # 创建带注解的标签</span><br><span class="line"></span><br><span class="line">$ git log --oneline --decorate --graph # 注意当我们执行 git log --decorate 时，我们可以看到我们的标签了</span><br><span class="line"></span><br><span class="line">$ git tag # 查看所有标签</span><br><span class="line"></span><br><span class="line">如果我们忘了给某个提交打标签，又将它发布了，我们可以给它追加标签。</span><br><span class="line">例如，假设我们发布了提交 85fc7e7(上面实例最后一行)，但是那时候忘了给它打标签。 我们现在也可以：</span><br><span class="line">git tag -a v0.9 85fc7e7</span><br><span class="line"></span><br><span class="line">指定标签信息命令：</span><br><span class="line">$ git tag -a &lt;tagname&gt; -m &quot;w3cschool.cc标签&quot;</span><br><span class="line"></span><br><span class="line">PGP签名标签命令：</span><br><span class="line">$ git tag -s &lt;tagname&gt; -m &quot;w3cschool.cc标签&quot;</span><br><span class="line"></span><br><span class="line">$ git tag -d v1.0 # 删除标签</span><br><span class="line"></span><br><span class="line">查看此版本所修改的内容</span><br><span class="line">$ git show v1.0</span><br></pre></td></tr></table></figure></li></ul><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="http://www.runoob.com/git/git-tutorial.html" target="_blank" rel="noopener">Git 教程</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;文章摘要：git常用命令的使用&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="git" scheme="https://swiftbman.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://swiftbman.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发零碎知识点整理</title>
    <link href="https://swiftbman.github.io/2017/07/25/iOS%E5%BC%80%E5%8F%91%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/"/>
    <id>https://swiftbman.github.io/2017/07/25/iOS开发零碎知识点整理/</id>
    <published>2017-07-25T06:20:19.000Z</published>
    <updated>2019-05-16T06:59:52.212Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>文章摘要：整理iOS零碎知识点</p></blockquote><a id="more"></a><hr><ol><li><p>调用代码使应用进入后台</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] performSelector:<span class="keyword">@selector</span>(suspend)];</span><br></pre></td></tr></table></figure></li><li><p>带中文的URL处理</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http://static.tripbe.com/videofiles/视频/我的自拍视频.mp4</span></span><br><span class="line"><span class="built_in">NSString</span> *path =(__bridge_transfer <span class="built_in">NSString</span> *)<span class="built_in">CFURLCreateStringByReplacingPercentEscapesUsingEncoding</span>(<span class="literal">NULL</span>, </span><br><span class="line">    (__bridge <span class="built_in">CFStringRef</span>)model.mp4_url, </span><br><span class="line">    <span class="built_in">CFSTR</span>(<span class="string">""</span>), </span><br><span class="line">    <span class="built_in">CFStringConvertNSStringEncodingToEncoding</span>(<span class="built_in">NSUTF8StringEncoding</span>));</span><br></pre></td></tr></table></figure></li><li><p>获取WebView高度</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)webViewDidFinishLoad:(<span class="built_in">UIWebView</span> *)webView  &#123;  </span><br><span class="line">    <span class="built_in">CGFloat</span> height = [[webView stringByEvaluatingJavaScriptFromString:<span class="string">@"document.body.offsetHeight"</span>] floatValue];  </span><br><span class="line">    <span class="built_in">CGRect</span> frame = webView.frame;  </span><br><span class="line">    webView.frame = <span class="built_in">CGRectMake</span>(frame.origin.x, frame.origin.y, frame.size.width, height);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>View设置图片</p><figure class="highlight objc"><figcaption><span>第一种方法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIColor</span> *bgColor = [<span class="built_in">UIColor</span> colorWithPatternImage: [<span class="built_in">UIImage</span> imageNamed:<span class="string">@"bgImg.png"</span>];</span><br><span class="line"><span class="built_in">UIView</span> *myView = [[<span class="built_in">UIView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="number">480</span>)];</span><br><span class="line">[myView setBackGroundColor:bgColor];</span><br></pre></td></tr></table></figure><figure class="highlight objc"><figcaption><span>第二种方法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIImage</span> *image = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@"yourPicName@2x.png"</span>];</span><br><span class="line">yourView.layer.contents = (__bridge <span class="keyword">id</span>)image.CGImage;</span><br><span class="line"><span class="comment">// 设置显示的图片范围</span></span><br><span class="line">yourView.layer.contentsCenter = <span class="built_in">CGRectMake</span>(<span class="number">0.25</span>,<span class="number">0.25</span>,<span class="number">0.5</span>,<span class="number">0.5</span>);<span class="comment">//四个值在0-1之间，对应的为x，y，width，height。</span></span><br></pre></td></tr></table></figure></li><li><p>去掉TableView 底部分割线</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourTableView.tableFooterView = [<span class="built_in">UIView</span> new];</span><br></pre></td></tr></table></figure></li><li><p>更改cell分割线位置</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLayoutSubviews &#123;</span><br><span class="line">    <span class="keyword">if</span> ([<span class="keyword">self</span>.mytableview respondsToSelector:<span class="keyword">@selector</span>(setSeparatorInset:)]) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.mytableview setSeparatorInset:<span class="built_in">UIEdgeInsetsMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)];</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([<span class="keyword">self</span>.mytableview respondsToSelector:<span class="keyword">@selector</span>(setLayoutMargins:)])  &#123;</span><br><span class="line">        [<span class="keyword">self</span>.mytableview setLayoutMargins:<span class="built_in">UIEdgeInsetsMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"># pragma mark - cell分割线</span></span><br><span class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView willDisplayCell:(<span class="built_in">UITableViewCell</span> *)cell forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ([cell respondsToSelector:<span class="keyword">@selector</span>(setSeparatorInset:)])&#123;</span><br><span class="line">        [cell setSeparatorInset:<span class="built_in">UIEdgeInsetsMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([cell respondsToSelector:<span class="keyword">@selector</span>(setLayoutMargins:)]) &#123;</span><br><span class="line">        [cell setLayoutMargins:<span class="built_in">UIEdgeInsetsMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UILabel和UIImageView的交互userInteractionEabled默认为NO。那么如果你把这两个类做为父试图的话，里面的所有东东都不可以点击哦。</p></li><li><p>搜索条Cancel改标题</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)searchBarShouldBeginEditing:(<span class="built_in">UISearchBar</span> *)searchBar</span><br><span class="line">&#123;</span><br><span class="line">    searchController.searchBar.showsCancelButton = <span class="literal">YES</span>;</span><br><span class="line">    <span class="built_in">UIButton</span> *canceLBtn = [searchController.searchBar valueForKey:<span class="string">@"cancelButton"</span>];</span><br><span class="line">    [canceLBtn setTitle:<span class="string">@"取消"</span> forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    [canceLBtn setTitleColor:[<span class="built_in">UIColor</span> colorWithRed:<span class="number">14.0</span>/<span class="number">255.0</span> green:<span class="number">180.0</span>/<span class="number">255.0</span> blue:<span class="number">0.0</span>/<span class="number">255.0</span> alpha:<span class="number">1.00</span>] forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    searchBar.showsCancelButton = <span class="literal">YES</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>TableView回收键盘</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yourTableView.keyboardDismissMode = <span class="built_in">UIScrollViewKeyboardDismissModeOnDrag</span>;</span><br><span class="line"><span class="comment">// 另外一个枚举为UIScrollViewKeyboardDismissModeInteractive，表示在键盘内部滑动，键盘逐渐下去。</span></span><br></pre></td></tr></table></figure></li><li><p>NSTimer<br>NSTimer计算的时间并不精确<br>NSTimer需要添加到runLoop运行才会执行，但是这个runLoop的线程必须是已经开启。<br>NSTimer会对它的tagert进行retain，我们必须对其重复性的使用intvailte停止。target如果是self（指UIViewController），那么VC的retainCount+1，如果你不释放NSTimer，那么你的VC就不会dealloc了，内存泄漏了。</p></li><li><p>十六进制取颜</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">UIColor</span> *)colorWithHexString:(<span class="built_in">NSString</span> *)color</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *cString = [[color stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> whitespaceAndNewlineCharacterSet]] uppercaseString];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// String should be 6 or 8 characters</span></span><br><span class="line">    <span class="keyword">if</span> ([cString length] &lt; <span class="number">6</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">UIColor</span> clearColor];</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// strip 0X if it appears</span></span><br><span class="line">    <span class="keyword">if</span> ([cString hasPrefix:<span class="string">@"0X"</span>])</span><br><span class="line">        cString = [cString substringFromIndex:<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span> ([cString hasPrefix:<span class="string">@"#"</span>])</span><br><span class="line">        cString = [cString substringFromIndex:<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> ([cString length] != <span class="number">6</span>)</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">UIColor</span> clearColor];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// Separate into r, g, b substrings</span></span><br><span class="line">    <span class="built_in">NSRange</span> range;</span><br><span class="line">    range.location = <span class="number">0</span>;</span><br><span class="line">    range.length = <span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//r</span></span><br><span class="line">    <span class="built_in">NSString</span> *rString = [cString substringWithRange:range];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//g</span></span><br><span class="line">    range.location = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">NSString</span> *gString = [cString substringWithRange:range];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//b</span></span><br><span class="line">    range.location = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">NSString</span> *bString = [cString substringWithRange:range];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// Scan values</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> r, g, b;</span><br><span class="line">    [[<span class="built_in">NSScanner</span> scannerWithString:rString] scanHexInt:&amp;r];</span><br><span class="line">    [[<span class="built_in">NSScanner</span> scannerWithString:gString] scanHexInt:&amp;g];</span><br><span class="line">    [[<span class="built_in">NSScanner</span> scannerWithString:bString] scanHexInt:&amp;b];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">UIColor</span> colorWithRed:((<span class="keyword">float</span>) r / <span class="number">255.0</span>f) green:((<span class="keyword">float</span>) g / <span class="number">255.0</span>f) blue:((<span class="keyword">float</span>) b / <span class="number">255.0</span>f) alpha:<span class="number">1.0</span>f];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>取今天是星期几</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">NSString</span> *) getweekDayStringWithDate:(<span class="built_in">NSDate</span> *) date</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSCalendar</span> * calendar = [[<span class="built_in">NSCalendar</span> alloc] initWithCalendarIdentifier:<span class="built_in">NSGregorianCalendar</span>]; <span class="comment">// 指定日历的算法</span></span><br><span class="line">    <span class="built_in">NSDateComponents</span> *comps = [calendar components:<span class="built_in">NSWeekdayCalendarUnit</span> fromDate:date];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 1 是周日，2是周一 3.以此类推</span></span><br><span class="line"> </span><br><span class="line">    <span class="built_in">NSNumber</span> * weekNumber = @([comps weekday]);</span><br><span class="line">    <span class="built_in">NSInteger</span> weekInt = [weekNumber integerValue];</span><br><span class="line">    <span class="built_in">NSString</span> *weekDayString = <span class="string">@"(周一)"</span>;</span><br><span class="line">    <span class="keyword">switch</span> (weekInt) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            weekDayString = <span class="string">@"(周日)"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            weekDayString = <span class="string">@"(周一)"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            weekDayString = <span class="string">@"(周二)"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            weekDayString = <span class="string">@"(周三)"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            weekDayString = <span class="string">@"(周四)"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            weekDayString = <span class="string">@"(周五)"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            weekDayString = <span class="string">@"(周六)"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> weekDayString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UIView的部分圆角问题</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIView</span> *view2 = [[<span class="built_in">UIView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">120</span>, <span class="number">10</span>, <span class="number">80</span>, <span class="number">80</span>)];</span><br><span class="line">view2.backgroundColor = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">[<span class="keyword">self</span>.view addSubview:view2];</span><br><span class="line"> </span><br><span class="line"><span class="built_in">UIBezierPath</span> *maskPath = [<span class="built_in">UIBezierPath</span> bezierPathWithRoundedRect:view2.bounds byRoundingCorners:<span class="built_in">UIRectCornerBottomLeft</span> | <span class="built_in">UIRectCornerBottomRight</span> cornerRadii:<span class="built_in">CGSizeMake</span>(<span class="number">10</span>, <span class="number">10</span>)];</span><br><span class="line"><span class="built_in">CAShapeLayer</span> *maskLayer = [[<span class="built_in">CAShapeLayer</span> alloc] init];</span><br><span class="line">maskLayer.frame = view2.bounds;</span><br><span class="line">maskLayer.path = maskPath.CGPath;</span><br><span class="line">view2.layer.mask = maskLayer;</span><br><span class="line"><span class="comment">//其中，byRoundingCorners:UIRectCornerBottomLeft |UIRectCornerBottomRight</span></span><br><span class="line"><span class="comment">//指定了需要成为圆角的角。该参数是UIRectCorner类型的，可选的值有：</span></span><br><span class="line"><span class="comment">//* UIRectCornerTopLeft</span></span><br><span class="line"><span class="comment">//* UIRectCornerTopRight</span></span><br><span class="line"><span class="comment">//* UIRectCornerBottomLeft</span></span><br><span class="line"><span class="comment">//* UIRectCornerBottomRight</span></span><br><span class="line"><span class="comment">//* UIRectCornerAllCorners</span></span><br></pre></td></tr></table></figure></li><li><p>滑动时隐藏navigationBar</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.navigationController.hidesBarsOnSwipe = <span class="literal">YES</span>;</span><br></pre></td></tr></table></figure></li><li><p>iOS画虚线</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;QuartzCore/QuartzCore.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">CGContextRef</span> context =<span class="built_in">UIGraphicsGetCurrentContext</span>();  </span><br><span class="line"><span class="built_in">CGContextBeginPath</span>(context);  </span><br><span class="line"><span class="built_in">CGContextSetLineWidth</span>(context, <span class="number">2.0</span>);  </span><br><span class="line"><span class="built_in">CGContextSetStrokeColorWithColor</span>(context, [<span class="built_in">UIColor</span> whiteColor].CGColor);  </span><br><span class="line"><span class="built_in">CGFloat</span> lengths[] = &#123;<span class="number">10</span>,<span class="number">10</span>&#125;;  </span><br><span class="line"><span class="built_in">CGContextSetLineDash</span>(context, <span class="number">0</span>, lengths,<span class="number">2</span>);  </span><br><span class="line"><span class="built_in">CGContextMoveToPoint</span>(context, <span class="number">10.0</span>, <span class="number">20.0</span>);  </span><br><span class="line"><span class="built_in">CGContextAddLineToPoint</span>(context, <span class="number">310.0</span>,<span class="number">20.0</span>);  </span><br><span class="line"><span class="built_in">CGContextStrokePath</span>(context);  </span><br><span class="line"><span class="built_in">CGContextClosePath</span>(context);</span><br></pre></td></tr></table></figure></li><li><p>自动布局多行UILabel问题</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 需要设置其preferredMaxLayoutWidth属性才能正常显示多行内容。另外如果出现显示不全文本，可以在计算的结果基础上＋0.5。</span></span><br><span class="line"><span class="built_in">CGFloat</span> h = [model.message boundingRectWithSize:<span class="built_in">CGSizeMake</span>([<span class="built_in">UIScreen</span> mainScreen].bounds.size.width - kGAP-kAvatar_Size - <span class="number">2</span>*kGAP, <span class="built_in">CGFLOAT_MAX</span>) options:<span class="built_in">NSStringDrawingUsesLineFragmentOrigin</span> attributes:attributes context:<span class="literal">nil</span>].size.height+<span class="number">0.5</span>;</span><br></pre></td></tr></table></figure></li><li><p>禁止运行时自动锁屏</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] setIdleTimerDisabled:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure></li><li><p>强制App直接退出</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)exitApplication &#123;</span><br><span class="line">    AppDelegate *app = [<span class="built_in">UIApplication</span> sharedApplication].delegate;</span><br><span class="line">    <span class="built_in">UIWindow</span> *window = app.window;</span><br><span class="line">    [<span class="built_in">UIView</span> animateWithDuration:<span class="number">1.0</span>f animations:^&#123;</span><br><span class="line">        window.alpha = <span class="number">0</span>;</span><br><span class="line">    &#125; completion:^(<span class="built_in">BOOL</span> finished) &#123;</span><br><span class="line">        exit(<span class="number">0</span>);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Label行间距</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSMutableAttributedString</span> *attributedString =    </span><br><span class="line">   [[<span class="built_in">NSMutableAttributedString</span> alloc] initWithString:<span class="keyword">self</span>.contentLabel.text];</span><br><span class="line">    <span class="built_in">NSMutableParagraphStyle</span> *paragraphStyle =  [[<span class="built_in">NSMutableParagraphStyle</span> alloc] init];  </span><br><span class="line">   [paragraphStyle setLineSpacing:<span class="number">3</span>];</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 调整行间距       </span></span><br><span class="line">[attributedString addAttribute:<span class="built_in">NSParagraphStyleAttributeName</span> </span><br><span class="line">                         value:paragraphStyle </span><br><span class="line">                         range:<span class="built_in">NSMakeRange</span>(<span class="number">0</span>, [<span class="keyword">self</span>.contentLabel.text length])];</span><br><span class="line"><span class="keyword">self</span>.contentLabel.attributedText = attributedString;</span><br></pre></td></tr></table></figure></li><li><p>MRC和ARC混编设置方式<br>在XCode中targets的build phases选项下Compile Sources下选择-&gt;不需要arc编译的文件，双击输入 -fno-objc-arc 即可<br>MRC工程中也可以使用ARC的类，方法如下：<br>在XCode中targets的build phases选项下Compile Sources下选择要使用arc编译的文件，双击输入 -fobjc-arc 即可</p></li><li><p>cell对勾颜色修改</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourTableView.tintColor = [<span class="built_in">UIColor</span> redColor];</span><br></pre></td></tr></table></figure></li><li><p>同时按两个按钮问题</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[button setExclusiveTouch:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure></li><li><p>修改占位符颜色和大小</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">textField.placeholder = <span class="string">@"请输入用户名"</span>;  </span><br><span class="line">[textField setValue:[<span class="built_in">UIColor</span> redColor] forKeyPath:<span class="string">@"_placeholderLabel.textColor"</span>];  </span><br><span class="line">[textField setValue:[<span class="built_in">UIFont</span> boldSystemFontOfSize:<span class="number">16</span>] forKeyPath:<span class="string">@"_placeholderLabel.font"</span>];</span><br></pre></td></tr></table></figure></li><li><p>禁止复制粘贴</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)canPerformAction:(SEL)action withSender:(<span class="keyword">id</span>)sender</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">if</span> ([<span class="built_in">UIMenuController</span> sharedMenuController]) &#123;</span><br><span class="line">       [<span class="built_in">UIMenuController</span> sharedMenuController].menuVisible = <span class="literal">NO</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>进入App在AppStore页面</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先用iTunes Link Maker找到软件在访问地址，格式为itms-apps://ax.itunes.apple.com/…，然后复制链接！</span></span><br><span class="line"><span class="meta">#define  ITUNESLINK   @<span class="meta-string">"itms-apps://ax.itunes.apple.com/..."</span></span></span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:ITUNESLINK];</span><br><span class="line"><span class="keyword">if</span>([[<span class="built_in">UIApplication</span> sharedApplication] canOpenURL:url])&#123;</span><br><span class="line">     [[<span class="built_in">UIApplication</span> sharedApplication] openURL:url];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果把上述地址中itms-apps改为http就可以在浏览器中打开了。可以把这个地址放在自己的网站里，链接到app store。 iTunes Link Maker地址：http://itunes.apple.com/linkmaker</span></span><br></pre></td></tr></table></figure></li><li><p>隐藏系统tabbar</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1、单个处理</span></span><br><span class="line">YourViewController *yourVC = [YourViewController new];</span><br><span class="line">yourVC.hidesBottomBarWhenPushed = <span class="literal">YES</span>;</span><br><span class="line">[<span class="keyword">self</span>.navigationController pushViewController:yourVC animated:<span class="literal">YES</span>];</span><br><span class="line"><span class="comment">// 2.统一在基类里面处理,新建一个类BaseNavigationController继承UINavigationController，然后重写 </span></span><br><span class="line">-(<span class="keyword">void</span>)pushViewController:(<span class="built_in">UIViewController</span> *)viewController animated:(<span class="built_in">BOOL</span>)animated这个方法。所有的push事件都走此方法。</span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">BaseNavigationController</span> : <span class="title">UINavigationController</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line">-(<span class="keyword">void</span>)pushViewController:(<span class="built_in">UIViewController</span> *)viewController animated:(<span class="built_in">BOOL</span>)animated&#123;</span><br><span class="line">    [<span class="keyword">super</span> pushViewController:viewController animated:animated];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.viewControllers.count&gt;<span class="number">1</span>) &#123;</span><br><span class="line">        viewController.hidesBottomBarWhenPushed = <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>取消系统的返回手势</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.navigationController.interactivePopGestureRecognizer.enabled = <span class="literal">NO</span>;</span><br></pre></td></tr></table></figure></li><li><p>改WebView字体/颜色</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UIWebView设置字体大小，颜色，字体： UIWebView无法通过自身的属性设置字体的一些属性，只能通过html代码进行设置 在webView加载完毕后：</span></span><br><span class="line">- (<span class="keyword">void</span>)webViewDidFinishLoad:(<span class="built_in">UIWebView</span> *)webView &#123;  </span><br><span class="line">    <span class="built_in">NSString</span> *str = <span class="string">@"document.getElementsByTagName('body')[0].style.webkitTextSizeAdjust= '60%'"</span>;  </span><br><span class="line">    [webView stringByEvaluatingJavaScriptFromString:str]; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSString</span> *jsString = [[<span class="built_in">NSString</span> alloc] initWithFormat:<span class="string">@"document.body.style.fontSize=%f;document.body.style.color=%@"</span>,fontSize,fontColor];   </span><br><span class="line">[webView stringByEvaluatingJavaScriptFromString:jsString];</span><br></pre></td></tr></table></figure></li><li><p>获取系统版本号</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一种</span></span><br><span class="line"><span class="built_in">NSString</span> * filePath = [[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"Info"</span> ofType:<span class="string">@"plist"</span>];</span><br><span class="line">    <span class="built_in">NSDictionary</span> * dic = [<span class="built_in">NSDictionary</span> dictionaryWithContentsOfFile:filePath];</span><br><span class="line">    <span class="built_in">NSString</span> * version = dic[<span class="string">@"CFBundleShortVersionString"</span>];</span><br><span class="line"><span class="comment">// 第二种</span></span><br><span class="line"><span class="built_in">NSString</span> * ver = [<span class="built_in">NSBundle</span> mainBundle].infoDictionary[<span class="string">@"CFBundleShortVersionString"</span>];</span><br></pre></td></tr></table></figure></li><li><p>CocoaPods无法显示类名<br><img src="./pods1.png" alt="pods1"><br><img src="./pods2.png" alt="pods2"></p></li><li>设置pch文件<br>1、pch原理：pch里面的内容被项目中的所有文件共有<br>2、存放一些公用的宏、头文件<br>3、pch需要提前编译<br>$(SRCROOT)/Base/BasePrefixHeader.pch<br><img src="./pch.png" alt="pch"></li><li><p>在oc项目中使用Swift<br><img src="./sw1.png" alt="sw1"><br>上面的修改了一个配置项，有一个Product Module Name在后面会使用。<br>在工程里面点击File/New/File…,选择iOS/Source/Cocoa Touch Class,按照如下填写创建一个新的文件：<br><img src="./sw2.png" alt="sw2"><br>上图中的Subclass of一定要设置为NSObject或其子类，否则OC工程将不会找到该类。<br>点击确认后会选择保存路径，点击Create，出现如下界面：<br><img src="./sw3.png" alt="sw3"><br>这个界面是询问是否创建桥接的头文件，这个文件在Swift调用OC代码的时候比较管用，但是在OC中调用Swift的时候我发现没有什么卵用。<br>选择Don’t Create按钮。<br>在Test.swift中添加如下的代码(解释都在注释里面了)：<br>我们在我们想要调用Swift类的方法里面引入头文件：”Product Module Name-Swift.h”,其中Product Module Name替换成在上面配置项中显示的内容，例如：<br>// 引入Swift头文件 #import “OCAndSwift-Swift.h”</p></li><li><p>解决横屏状态栏默认隐藏的问题</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在Info.plist文件添加View controller-based status bar appearance 设置为YES；</span></span><br><span class="line"><span class="comment">// 设置状态栏样式</span></span><br><span class="line">- (<span class="built_in">UIStatusBarStyle</span>)preferredStatusBarStyle &#123;</span><br><span class="line">    <span class="comment">// 白色</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UIStatusBarStyleLightContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 在需要显示状态的控制器（横屏时）敲入以下代码：</span></span><br><span class="line"><span class="comment">// 设置是否隐藏</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)prefersStatusBarHidden &#123;</span><br><span class="line">    <span class="comment">//    [super prefersStatusBarHidden];</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置隐藏动画</span></span><br><span class="line">- (<span class="built_in">UIStatusBarAnimation</span>)preferredStatusBarUpdateAnimation &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UIStatusBarAnimationNone</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>iOS横竖屏适配</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)viewWillTransitionToSize:(<span class="built_in">CGSize</span>)size withTransitionCoordinator:(<span class="keyword">id</span>&lt;<span class="built_in">UIViewControllerTransitionCoordinator</span>&gt;)coordinator</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewWillTransitionToSize:size withTransitionCoordinator:coordinator];</span><br><span class="line">    [coordinator animateAlongsideTransition:^(<span class="keyword">id</span>&lt;<span class="built_in">UIViewControllerTransitionCoordinatorContext</span>&gt; context) &#123;</span><br><span class="line">        <span class="comment">//计算旋转之后的宽度并赋值</span></span><br><span class="line">        <span class="built_in">CGSize</span> screen = [<span class="built_in">UIScreen</span> mainScreen].bounds.size;</span><br><span class="line">        <span class="comment">//界面处理逻辑</span></span><br><span class="line">        <span class="keyword">self</span>.lineChartView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">30</span>, screen.width, <span class="number">200.0</span>);</span><br><span class="line">        <span class="comment">//动画播放完成之后</span></span><br><span class="line">        <span class="keyword">if</span>(screen.width &gt; screen.height)&#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"横屏"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"竖屏"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; completion:^(<span class="keyword">id</span>&lt;<span class="built_in">UIViewControllerTransitionCoordinatorContext</span>&gt; context) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"动画播放完之后处理"</span>);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;文章摘要：整理iOS零碎知识点&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://swiftbman.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://swiftbman.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS常用框架精选</title>
    <link href="https://swiftbman.github.io/2017/07/21/iOS%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6%E7%B2%BE%E9%80%89/"/>
    <id>https://swiftbman.github.io/2017/07/21/iOS常用框架精选/</id>
    <published>2017-07-21T07:26:02.000Z</published>
    <updated>2019-05-16T06:59:03.382Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>文章摘要：精选iOS常用框架</p></blockquote><a id="more"></a><hr><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><ol><li><a href="https://github.com/airbnb/lottie-ios" target="_blank" rel="noopener">lottie</a> —— 利用json做动画</li><li><a href="https://github.com/YouXianMing/Animations" target="_blank" rel="noopener">Animations</a> —— 动画库，很炫</li><li><a href="https://github.com/KittenYang/A-GUIDE-TO-iOS-ANIMATION" target="_blank" rel="noopener">A-GUIDE-TO-iOS-ANIMATION</a> —— 动画指南</li><li><a href="https://github.com/facebook/pop" target="_blank" rel="noopener">pop</a> —— facebook动画框架</li><li><a href="https://github.com/yixiangboy/IOSAnimationDemo" target="_blank" rel="noopener">IOSAnimationDemo</a> —— iOS 动画demo</li><li><a href="https://github.com/ColinEberhardt/VCTransitionsLibrary" target="_blank" rel="noopener">VCTransitionLibrary</a> —— 控制器转场动画库</li></ol><h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h3><h4 id="整体结构布局"><a href="#整体结构布局" class="headerlink" title="整体结构布局"></a>整体结构布局</h4><ol><li><a href="https://github.com/mutualmobile/MMDrawerController" target="_blank" rel="noopener">MMDrawerController</a> —— 功能最多的抽屉框架</li><li><a href="https://github.com/romaonthego/RESideMenu" target="_blank" rel="noopener">RESideMenu</a> —— 最好用的抽屉框架</li><li><a href="https://github.com/robbdimitrov/RDVTabBarController" target="_blank" rel="noopener">RDVTabBarController</a> —— 自定义tabbarController</li><li><a href="https://github.com/pkluz/PKRevealController" target="_blank" rel="noopener">PKRevealController</a> —— 非常简单的设置，高度的自定义，手势的识别非常好</li></ol><h4 id="iOS控件"><a href="#iOS控件" class="headerlink" title="iOS控件"></a>iOS控件</h4><ol><li><a href="https://github.com/calimarkus/JDStatusBarNotification" target="_blank" rel="noopener">JDStatusBarNotification</a> —— 电池栏通知</li><li><a href="https://github.com/calimarkus/JDFlipNumberView" target="_blank" rel="noopener">JDFlipNumberView</a> —— 数字或图片翻转</li><li><a href="https://github.com/gsdios/SDCycleScrollView" target="_blank" rel="noopener">SDCycleScrollView</a> —— iOS图片、文字轮播器</li><li><a href="https://github.com/zhengjinghua/StitchingImage" target="_blank" rel="noopener">StitchingImage</a> —— iOS 仿微信群组封面拼接控件</li><li><a href="https://github.com/nicklockwood/iCarousel" target="_blank" rel="noopener">iCarousel</a> —— 卡片切换</li><li><a href="https://github.com/KittenYang/KYGooeyMenu" target="_blank" rel="noopener">KYGooeyMenu</a> —— 带粘性的扇形菜单</li><li><a href="https://github.com/KittenYang/KYAnimatedPageControl" target="_blank" rel="noopener">KYAnimatedPageControl</a> —— 粘性小球 旋转方块</li><li><a href="https://github.com/KittenYang/KYCuteView" target="_blank" rel="noopener">KYCuteView</a> —— 实现类似QQ消息拖拽消失的交互+GameCenter的浮动小球效果</li><li><a href="https://github.com/victorBaro/VBFPopFlatButton" target="_blank" rel="noopener">VBFPopFlatButton</a> —— 基于pop框架实现的按钮</li><li><a href="https://github.com/BrownCN023/CTTextDisplayView" target="_blank" rel="noopener">CTTextDisplayView</a> —— CTTextDisplayView 是一个CoreText完成的图文混排视图，主要用于文本中显示表情@#URL等，类似于QQ、微博的评论图文功能。</li><li><a href="https://github.com/gskbyte/GSKStretchyHeaderView" target="_blank" rel="noopener">GSKStretchyHeaderView</a> —— 有弹性的tableViewHeader</li><li><a href="https://github.com/dogo/SCLAlertView" target="_blank" rel="noopener">SCLAlertView</a> —— 弹出提示框</li><li><a href="https://github.com/dsxNiubility/SXWaveAnimate" target="_blank" rel="noopener">SXWaveAnimate</a> —— 水波纹</li><li><a href="https://github.com/questbeat/QBPopupMenu" target="_blank" rel="noopener">QBPopupMenu</a> —— 长按弹出菜单</li><li><a href="https://github.com/iphone5solo/PYSearch" target="_blank" rel="noopener">PYSearch</a> —— 搜索控制器</li><li><a href="https://github.com/jdg/MBProgressHUD" target="_blank" rel="noopener">MBProgressHUD</a> —— 最常用的HUD</li><li><a href="https://github.com/imlifengfeng/FFToast" target="_blank" rel="noopener">FFToast</a> —— 最全的HUD</li><li><a href="https://github.com/overboming/ZCAnimatedLabel" target="_blank" rel="noopener">ZCAnimatedLabel</a> —— UILabel动画</li><li><a href="https://github.com/raulriera/TextFieldEffects" target="_blank" rel="noopener">TextFieldEffects</a> —— 文本输入效果</li><li><a href="https://github.com/slackhq/SlackTextViewController" target="_blank" rel="noopener">SlackTextViewController</a></li><li><a href="https://github.com/PrideChung/FontAwesomeKit" target="_blank" rel="noopener">FontAwesomeKit</a> —— Font Awesome 是非常优秀的，使用这个库可以简单地添加字体到你的项目当中，另外还有很多其它方面的功能。</li><li><a href="https://github.com/MortimerGoro/MGSwipeTableCell" target="_blank" rel="noopener">MGSwipeTableCell</a> —— 可擦除式表格单元</li></ol><h3 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h3><ol><li><a href="https://github.com/ameizi/awesome-ios-chart" target="_blank" rel="noopener">awesome-ios-chart</a> —— 图表</li></ol><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><ol><li><a href="https://github.com/gsdios/SDAutoLayout" target="_blank" rel="noopener">SDAutoLayout</a> —— 一行代码搞定自动布局</li><li><a href="https://github.com/SnapKit/Masonry" target="_blank" rel="noopener">Masonry</a> —— 链式布局框架，很好用</li><li><a href="https://github.com/facebook/yoga" target="_blank" rel="noopener">yoga</a> —— facebook开源的布局框架（跨平台）</li></ol><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><ol><li><a href="https://github.com/AFNetworking/AFNetworking" target="_blank" rel="noopener">AFNetworking</a> ——— 很强大</li><li><a href="https://github.com/kangzubin/XMNetworking" target="_blank" rel="noopener">XMNetworking</a> —— 基于AFNetworking二次封装</li></ol><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ol><li><a href="https://github.com/ccgus/fmdb" target="_blank" rel="noopener">fmdb</a> —— 简化数据操作</li><li><a href="https://github.com/magicalpanda/MagicalRecord" target="_blank" rel="noopener">MagicalRecord</a> —— MagicalRecord 就像是针对 Core Data 的一个封装，隐藏了所有跟开发者无关的东西。</li></ol><h3 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h3><ol><li><a href="https://github.com/CoderMJLee/MJRefresh" target="_blank" rel="noopener">MJRefresh</a> —— app刷新</li></ol><h3 id="模型转换"><a href="#模型转换" class="headerlink" title="模型转换"></a>模型转换</h3><ol><li><a href="https://github.com/CoderMJLee/MJExtension" target="_blank" rel="noopener">MJExtension</a> —— 简单好用</li><li><a href="https://github.com/ibireme/YYModel" target="_blank" rel="noopener">YYModel</a> —— 高性能的 iOS JSON 模型框架</li></ol><h3 id="图片下载"><a href="#图片下载" class="headerlink" title="图片下载"></a>图片下载</h3><ol><li><a href="https://github.com/rs/SDWebImage" target="_blank" rel="noopener">SDWebImage</a> —— 好用</li><li><a href="https://github.com/ibireme/YYWebImage" target="_blank" rel="noopener">YYWebImage</a> —— 高性能的 iOS 异步图像加载框架</li></ol><h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><ol><li><a href="https://github.com/dsxNiubility/Wonderful" target="_blank" rel="noopener">Wonderful</a> —— 一个关于色彩的库</li><li><a href="https://github.com/ViccAlexander/Chameleon" target="_blank" rel="noopener">Chameleon</a> —— 支持Swift的颜色库</li></ol><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><ol><li><a href="https://github.com/hackiftekhar/IQKeyboardManager" target="_blank" rel="noopener">IQKeyboardManager</a> —— 弹出键盘管理</li><li><a href="https://github.com/ReactiveCocoa/ReactiveCocoa" target="_blank" rel="noopener">ReactiveCocoa</a> —— 响应式编程框架</li><li><a href="https://github.com/soffes/SAMKeychain" target="_blank" rel="noopener">SAMKeychain</a> —— 存储用户名和密码</li><li><a href="https://github.com/dzenbot/DZNEmptyDataSet" target="_blank" rel="noopener">DZNEmptyDataSet</a> —— 这是 iOS 内建的标准，用于处理空表和集合视图</li><li><a href="https://github.com/jivesoftware/PDTSimpleCalendar" target="_blank" rel="noopener">PDTSimpleCalendar</a> —— 日历组件</li><li><a href="https://github.com/BradLarson/GPUImage" target="_blank" rel="noopener">GPUImage</a> —— GPUImage为我们提供了由GPU加速的相机预览效果（包括图像和视频），速度极快。</li><li><a href="https://github.com/nicklockwood/iRate" target="_blank" rel="noopener">iRate</a> —— 一个便于使用的类库，可用于督促在iPhone、Mac应用商店下载并使用你的app用户给你推荐</li><li><a href="https://github.com/Zepo/MLeaksFinder" target="_blank" rel="noopener">MLeaksFinder</a> —— 检测内存泄露</li><li><a href="https://github.com/UrbanApps/UAAppReviewManager" target="_blank" rel="noopener">UAAppReviewManager</a> —— 提醒用户评论</li></ol><h3 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h3><ol><li><a href="https://github.com/Alamofire/Alamofire" target="_blank" rel="noopener">Alamofire</a> —— Alamofire 是一个写在 Swift 上的十分美观的网络文库。</li></ol><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="http://www.jianshu.com/p/fd4441c4033e" target="_blank" rel="noopener">IOS第三方框架集合</a><br><a href="https://github.com/LPH5885888/OpenSource" target="_blank" rel="noopener">OpenSource</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzAxMzE2Mjc2Ng==&amp;mid=2652155701&amp;idx=1&amp;sn=ddb9e1021f7120261a04fe12e0dea821&amp;chksm=8046cf54b7314642c7a6e333696133bc8806cc8a3c1e475460b8d6cc78fa569c0245e1166e16&amp;mpshare=1&amp;scene=23&amp;srcid=0722yu4zrdZ6TczKyOD1Lmej#rd" target="_blank" rel="noopener">27 款 iOS 开源库，让你的开发溜到飞起</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;文章摘要：精选iOS常用框架&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://swiftbman.github.io/categories/iOS/"/>
    
    
      <category term="框架" scheme="https://swiftbman.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>yarn一些常用命令的使用</title>
    <link href="https://swiftbman.github.io/2017/07/21/UseYarn/"/>
    <id>https://swiftbman.github.io/2017/07/21/UseYarn/</id>
    <published>2017-07-21T03:44:49.000Z</published>
    <updated>2019-05-16T06:59:37.650Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>文章摘要：介绍yarn的一些常用命令的使用</p></blockquote><a id="more"></a><hr><ol><li>初始化项目<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn init</span><br></pre></td></tr></table></figure></li><li>添加依赖包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add [package]</span><br><span class="line">$ yarn add [package]@[version]</span><br><span class="line">$ yarn add [package]@[tag]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add [package] --dev</span><br><span class="line">$ yarn add [package] --peer </span><br><span class="line">$ yarn add [package] --optional</span><br></pre></td></tr></table></figure></li><li>升级依赖包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yarn upgrade [package]</span><br><span class="line">$ yarn upgrade [package]@[version]</span><br><span class="line">$ yarn upgrade [package]@[tag]</span><br></pre></td></tr></table></figure></li><li>移除依赖包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn remove [package]</span><br></pre></td></tr></table></figure></li><li>安装项目的全部依赖<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yarn install </span><br><span class="line">或</span><br><span class="line">$ yarn</span><br></pre></td></tr></table></figure></li></ol><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="https://yarnpkg.com/zh-Hans/" target="_blank" rel="noopener">yarn官网</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;文章摘要：介绍yarn的一些常用命令的使用&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="终端命令" scheme="https://swiftbman.github.io/categories/%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="yarn" scheme="https://swiftbman.github.io/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>npm的一些常用命令</title>
    <link href="https://swiftbman.github.io/2017/07/19/UseNpm/"/>
    <id>https://swiftbman.github.io/2017/07/19/UseNpm/</id>
    <published>2017-07-19T14:18:45.000Z</published>
    <updated>2019-05-16T06:59:23.784Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>文章摘要：介绍npm一些常用命令的使用</p></blockquote><a id="more"></a><hr><ol><li>安装模块<figure class="highlight plain"><figcaption><span>全局安装</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install &lt;Module Name&gt; -g</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>局部安装</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install &lt;Module Name&gt;</span><br></pre></td></tr></table></figure><div class="note info"><p>你需要在当前的目录下执行初始化，也就是说当前目录必须有 package.json 文件。或者，你在当前的目录下人为的建立好node_modules目录否则npm会一直向上寻找package.json的所在目录，或者是node_modules目录，最后终止在用户根目录。</p></div></li><li>查看安装的模块及依赖<figure class="highlight plain"><figcaption><span>查看全局模块及依赖</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm ls -g</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>查看局部模块及依赖</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm ls</span><br></pre></td></tr></table></figure></li><li>卸载模块<figure class="highlight plain"><figcaption><span>全局卸载模块</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall &lt;Module Name&gt; -g</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>局部卸载模块</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall &lt;Module Name&gt;</span><br></pre></td></tr></table></figure></li><li>缓存验证<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm cache verify</span><br></pre></td></tr></table></figure></li><li>清理缓存<figure class="highlight plain"><figcaption><span>--force强制的意思</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm cache clean --force</span><br></pre></td></tr></table></figure></li><li>检查模块是否已经过时<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm outdated</span><br></pre></td></tr></table></figure></li><li>更新模块<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm update</span><br></pre></td></tr></table></figure></li><li>升级npm<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i -g npm</span><br></pre></td></tr></table></figure></li><li>查看npm版本<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm -v</span><br></pre></td></tr></table></figure></li><li>查看某个模块的版本号<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm list &lt;Module name&gt;</span><br></pre></td></tr></table></figure></li><li>搜索模块<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm search &lt;Module name&gt;</span><br></pre></td></tr></table></figure></li></ol><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="https://www.npmjs.com" target="_blank" rel="noopener">NPM 官网</a><br><a href="http://www.runoob.com/nodejs/nodejs-npm.html" target="_blank" rel="noopener">NPM 使用介绍</a><br><a href="http://www.cnblogs.com/PeunZhang/p/5553574.html" target="_blank" rel="noopener">NPM 常用命令详解</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;文章摘要：介绍npm一些常用命令的使用&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="终端命令" scheme="https://swiftbman.github.io/categories/%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="npm" scheme="https://swiftbman.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>brew命令的使用</title>
    <link href="https://swiftbman.github.io/2017/07/18/UseBrew/"/>
    <id>https://swiftbman.github.io/2017/07/18/UseBrew/</id>
    <published>2017-07-17T16:38:28.000Z</published>
    <updated>2019-05-16T06:58:48.823Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><hr><blockquote><p>介绍brew一些常用命令的使用</p></blockquote><a id="more"></a><hr><ol><li><p>查看brew帮助</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew help</span><br></pre></td></tr></table></figure></li><li><p>搜索软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew search [TEXT|/REGEX/]</span><br></pre></td></tr></table></figure></li><li><p>安装软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install FORMULA...</span><br></pre></td></tr></table></figure></li><li><p>卸载软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew uninstall FORMULA...</span><br></pre></td></tr></table></figure></li><li><p>显示已经安装的软件列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew list [FORMULA...]</span><br></pre></td></tr></table></figure></li><li><p>查看过期的软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew outdated</span><br></pre></td></tr></table></figure></li><li><p>更新 Homebrew 自己</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew update</span><br></pre></td></tr></table></figure></li><li><p>更新某个具体软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew upgrade [FORMULA...]</span><br></pre></td></tr></table></figure></li><li><p>更新所有软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew upgrade</span><br></pre></td></tr></table></figure></li><li><p>查看软件信息、网站、选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew (info|home|options) [FORMULA...]</span><br></pre></td></tr></table></figure></li><li><p>清除软件老版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cleanup</span><br></pre></td></tr></table></figure></li><li><p>清除某个软件老版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew cleanup FORMULA...</span><br></pre></td></tr></table></figure></li><li><p>查看配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew config</span><br></pre></td></tr></table></figure></li><li><p>查看有没有安装的问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew doctor</span><br></pre></td></tr></table></figure></li><li><p>更新和软件升级</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew update &amp;&amp; brew upgrade</span><br></pre></td></tr></table></figure></li></ol><hr><div class="note info"><h4 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h4><p><a href="https://brew.sh" target="_blank" rel="noopener">Homebrew官网</a></p></div><div class="note warning"><p>转载请注明出处<br>文章有问题请指出</p></div>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;介绍brew一些常用命令的使用&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="终端命令" scheme="https://swiftbman.github.io/categories/%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="brew" scheme="https://swiftbman.github.io/tags/brew/"/>
    
  </entry>
  
</feed>
